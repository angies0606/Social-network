{"version":3,"sources":["ui-kit/ImageUrlPreview/ImageUrlPreview.module.scss","ui-kit/DeleteImage/DeleteImage.module.scss","components/Users/UserInfo/UserInfo.module.scss","components/comments/CommentsBlock/CommentsBlock.module.scss","components/Users/UsersPage/Users.module.css","features/FormsControls/FormsControls.module.css","components/Likes/Likes.module.scss","ui-kit/List/List.module.scss","features/progress/Progress.module.css","components/Profile/ProfilePage/Profile.module.css","ui-kit/SelectFile/SelectFile.module.scss","ui-kit/ImageFilePreview/ImageFilePreview.module.scss","ui-kit/Menu/Menu.module.scss","ui-kit/Separator/Separator.module.css","reportWebVitals.js","redux/store/initial-state.js","redux/actions/post.actions.js","redux/actions/users.actions.js","redux/reducers/pages/user-page.reducer.js","redux/reducers/pages/users-page.reducer.js","redux/reducers/pages/index.js","redux/reducers/Entities-reducers/entities-comments.reducer.js","redux/reducers/Entities-reducers/entities-posts.reducer.js","redux/reducers/Entities-reducers/entities-users.reducer.js","api/axios.js","redux/reducers/Entities-reducers/index.js","redux/reducers/index.js","redux/store/redux-store.js","features/auth/useAuth.js","api/api.js","features/auth/auth.context.js","features/auth/Auth.jsx","features/progress/useProgress.js","features/progress/progress.context.js","features/progress/Progress.jsx","utils/validators/validators.js","features/FormsControls/FormsControls.jsx","ui-kit/Button/Button.jsx","ui-kit/InfoDialog/InfoDialog.jsx","routes/RegisterRoute/Register.route.jsx","ui-kit/Avatar/Avatar.jsx","ui-kit/Preloader/Preloader.jsx","assets/images/defaultBanner.jpg","components/Profile/ProfileInfo/ProfileInfo.jsx","ui-kit/SelectFile/SelectFile.jsx","ui-kit/IconButton/IconButton.jsx","ui-kit/DeleteImage/DeleteImage.jsx","ui-kit/ImageUrlPreview/ImageUrlPreview.jsx","ui-kit/ImageFilePreview/ImageFilePreview.jsx","components/posts/PostCreator/PostCreator.jsx","components/Likes/Likes.jsx","ui-kit/DateBar/passedTimeCalc.js","ui-kit/DateBar/DateBar.jsx","ui-kit/Menu/Menu.jsx","ui-kit/ImageDialog/ImageDialog.jsx","ui-kit/ConfirmDialog/ConfirmDialog.jsx","features/Expander/Expander.jsx","ui-kit/Separator/Separator.jsx","components/comments/Comment/Comment.jsx","components/comments/CommentsCreator/CommentsCreator.jsx","ui-kit/List/List.jsx","components/comments/CommentsBlock/CommentsBlock.jsx","components/comments/CommentsBlock/CommentsBlockConnected.js","components/posts/Post/Post.jsx","components/posts/Post/PostConnected.js","features/scroll/scroll.context.js","components/posts/PostsBlock/PostsBlock.jsx","components/posts/PostsBlock/PostsBlockConnected.jsx","components/Profile/ProfilePage/Profile.jsx","redux/selectors/user.selectors.js","routes/ProfileRoute/ProfileRoute.jsx","routes/ProfileRoute/ProfileRoute.connect.js","redux/thunks/users.thunks.js","routes/LoginRoute/Login.route.jsx","ui-kit/ImageChanger/ImageChanger.jsx","components/Settings/Settings.jsx","components/Settings/SettingsConnected.js","components/Users/UserInfo/UserInfo.jsx","components/Users/UsersPage/Users.jsx","components/Users/UsersPage/UsersConnected.js","features/AppRouting/AppRouting.jsx","components/Navbar/Navbar.jsx","assets/images/postikLabel.png","components/Header/Header.jsx","features/scroll/ScrollProvider.jsx","components/App/App.jsx","history.js","index.jsx","components/Settings/Settings.module.scss","components/Header/Header.module.css","components/posts/Post/Post.module.scss","routes/RegisterRoute/Register.route.module.scss","components/posts/PostCreator/PostCreator.module.scss","components/comments/Comment/Comment.module.scss","routes/LoginRoute/Login.route.module.scss","components/Navbar/Navbar.module.css","components/App/App.module.css","components/posts/PostsBlock/PostsBlock.module.css","ui-kit/ImageDialog/ImageDialog.module.scss","ui-kit/ConfirmDialog/ConfirmDialog.module.scss","ui-kit/InfoDialog/InfoDialog.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/comments/CommentsCreator/CommentsCreator.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","pages","userPage","user","posts","usersPage","users","entities","comments","NEW_POST","ADD_POSTS","SET_POSTS","DELETE_POST","EDIT_POST","SET_LIKE","PUT_COMMENTS","putCommentsActionCreator","data","type","PUT_ONE_COMMENT","DELETE_COMMENT","deleteCommentActionCreator","SET_USER","setUserActionCreator","ADD_USERS","userPageReducer","state","action","newState","_id","map","post","postId","splice","indexOf","usersPageReducer","filter","userId","includes","pagesReducer","combineReducers","entitiesCommentsReducer","commentsData","forEach","comment","commentData","commentId","deletedComment","entitiesPostsReducer","nComments","entitiesUsersReducer","refreshPromise","entitiesReducer","reducers","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","instance","axios","create","baseURL","process","headers","withCredentials","refreshURL","ignoreUnauthorizedResponseFromURLs","interceptors","response","use","res","error","a","status","config","url","_isRetry","catch","e","_dispatch","setUnauthedActionCreator","request","result","Promise","reject","authApi","email","nickname","password","login","usersApi","get","params","imageData","avatar","delete","banner","postsApi","payload","patch","imagesApi","isAuthed","isInitialized","SET_AUTHED","setAuthedActionCreator","SET_UNAUTHED","authReducer","obj","console","log","useAuth","useReducer","dispatch","register","useCallback","logout","check","changeUserData","useEffect","useMemo","AuthContext","createContext","useAuthContext","useContext","Auth","children","auth","Provider","value","progressReducer","useProgress","progressCounter","increment","decrement","isProgress","ProgressContext","useProgressContext","Progress","progress","requestInterceptorId","req","responseInterceptorId","err","eject","LinearProgress","className","classes","Progress__Bar","variant","color","required","lengthValidator","valueLength","maxLength","validate","values","errors","test","emailValidator","length","FormControl","input","meta","props","child","hasError","touched","formControl","Input","restProps","Button","sx","fontSize","InfoDialog","isShown","title","onClose","message","open","InfoDialog__Container","InfoDialog__Title","InfoDialog__Content","InfoDialog__ButtonContainer","onClick","disabled","InfoDialog__Button","RegisterReduxForm","reduxForm","Field","classname","Register__Field","name","placeholder","component","style","width","height","marginTop","formSummaryError","Register__ButtonContainer","Register__Button","handleSubmit","RegisterRoute","useState","setIsShown","isRegisterSuccessful","setIsRegisterSuccessful","history","useHistory","Card","Register__Container","CardHeader","Login__CardHeader","CardContent","Register__FormBox","onSubmit","formData","push","Avatar","userAvatar","avatarHeight","avatarWidth","src","Preloader","ProfileInfo","profileUser","ProfileInfo__UserInfo","ProfileInfo__Banner","DefaultBanner","ProfileInfo__Avatar","ProfileInfo__Nickname","SelectFile","onFileSelect","isDisabled","inputRef","useRef","buttonClone","cloneElement","current","click","onButtonClick","ref","accept","onChange","file","files","target","SelectFile__Input","IconButton","DeleteImage","onDeleteImage","classNames","DeleteImage__OuterContainer","DeleteImage__ImageBox","Children","DeleteImage__Image","DeleteImage__XButton","ImageUrlPreview","imageUrl","isDeleteShown","imageClassName","imagePreview","ImagePreview__Image","ImagePreview","ImagePreview__DeleteImage","ImageFilePreview","imageFile","window","URL","createObjectURL","ImagePreview__Text","size","PostCreator","onPostConfirm","textField","buttonContent","postText","isShowCancelButton","cancelChange","openImageDialog","wasPostImageChanged","isImageInPost","wasImageInPost","isValid","textState","setTextState","isAddingImage","setAddingImage","setImageFile","wasTextChanged","setWasTextChanged","setText","text","textFieldClone","PostCreator__TextField","onTextChange","uploadImage","FormData","append","onCancel","PostCreator__CardContentBox","PostCreator__ImagePreview","PostCreator__CardActions","PostCreator__ButtonsContainer","PostCreator__Button","resolve","image","finally","isPostValid","isTextValid","textValue","postValidator","PostCreator__IconsContainer","PostCreator__IconButton","Likes","likes","addLike","removeLike","isLiked","authedUserId","Likes__FavouriteIcon","moment","locale","DateBar","creationDate","updateDate","currentTimeout","setCurrentTimeout","timeMessage","setCurrentTime","updateTimeout","timeout","clearTimeout","timeoutId","setTimeout","refreshTime","creationTime","currentDate","diffTime","diff","isSame","format","passedTimeCalc","Menu","changeMode","anchorEl","setAnchorEl","Boolean","handleClose","id","event","currentTarget","Menu__IconButton","MenuListProps","ImageDialog","closeDialog","onImageConfirm","onCloseDialog","ImageDialog__Title","ImageDialog__Content","ImageDialog__ButtonContainer","startIcon","ImageDialog__Button","ConfirmDialog","onConfirm","ConfirmDialog__Container","ConfirmDialog__Title","ConfirmDialog__Content","ConfirmDialog__ButtonContainer","ConfirmDialog__Button","Expander","styled","expand","other","theme","marginLeft","transition","transitions","duration","shortest","Separator","Comment","deleteComment","isDialogOpened","setIsDialogOpened","Comment__Box","Comment__Header","Comment__Avatar","Comment__Icon","padding","Comment__CloseIcon","userNickname","subheader","createdAt","Comment__DateBar","updatedAt","Typography","Comment__Typography","Comment__Text","CommentsCreator","authedUser","confirmed","CommentsCreator__Box","CommentsCreator__UserCommentBox","CommentsCreator__Avatar","CommentsCreator__TextField","FilledInput","multiline","fullWidth","maxRows","CommentsCreator__Button","List","items","nextMethod","isHasMore","scrollableTargetId","itemBuilder","noData","isNoDataShown","dataLength","next","hasMore","scrollableTarget","scrollThreshold","loader","List__SpinerContainer","CircularProgress","memo","CommentsBlock","expanded","putComments","putOneComment","setIsHasMore","page","setPage","loadNextPage","limit","sort","hasNextPage","onDeleteComment","CommentsBlock__Container","CommentsBlock__CommentContainer","CommentsBlock__ButtonBox","fontWeight","CommentsBlockConnected","connect","ownProps","putOneCommentActionCreator","imageDialogTitles","Post","deletePost","editPost","setLike","setExpanded","setChangeMode","setWasImageInPost","setIsImageInPost","editingImageUrl","setEditingImageUrl","editingImageFile","setEditingImageFile","imageNeedsDeleting","setImageNeedsDeleting","setWasPostImageChanged","imageDialogTitle","setImageDialogTitle","isImageDialogOpened","setIsImageDialogOpened","isMessageDialogOpened","setIsMessageDialogOpened","TextField","rows","uploadImageRequest","getImageRequest","deletePostImageRequest","Post__Card","MenuItem","Card__CardMediaBox","Card__PostImage","CardMedia","Card__CardMedia","Post__CardContent","Post__PostText","postData","editedPost","Card__CardActionsBox","CardActions","disableSpacing","nLikes","aria-expanded","Post__CommentIcon","Collapse","in","unmountOnExit","PostConnected","setLikeActionCreator","ScrollContext","useScrollContext","PostsBlock","isForCurrentUser","addPosts","setPosts","newPost","onEditPost","onDeletePost","PostsBlock__Posts","PostsBlock__PostsCreatorCard","newPostData","PostsBlock__TextField","label","minRows","editPostImage","PostsBlock__NoDataCard","PostsBlock__NoDataText","PostsBlockConnected","newPostActionCreator","addPostsActionCreator","setPostsActionCreator","deletePostActionCreator","editPostActionCreator","Profile","Profile__Container","getUserPageUser","ProfileRouteConnect","clearUser","getUser","getUserActionCreator","useParams","paramsUserId","updateStatus","LoginReduxForm","Login__Field","Login__ButtonContainer","Login__Button","Login","Login__Container","Login__FormBox","ImageChanger","onImageChange","TITLES","AVATAR","BANNER","Settings","userProfileId","changeProfileImage","incrementAvatarProgress","decrementAvatarProgress","isAvatarProgress","incrementBannerProgress","decrementBannerProgress","isBannerProgress","isAvatarDialogOpened","setIsAvatarDialogOpened","isBannerDialogOpened","setIsBannerDialogOpened","isTheSameUser","onChangeUserImages","Settings__Container","Settings__Header","Settings__Avatar","Settings__ButtonBox","Settings__Button","Settings__DeleteButton","Settings__BannerBox","Settings__Banner","SettingsConnected","UserInfo","to","UserInfo__NavLink","UserInfo__Container","UserInfo__Avatar","UserInfo__Nickname","Users","addUsers","setIsUsersListReady","Users__Container","Users__NoDataCard","Users__NoDataText","UsersConnected","addUsersActionCreator","AppRouting","path","render","Navbar","Navbar__Box","Navbar__Link","activeClassName","active","Header","Header__Label","Label","Header__LoginBlock","Header__UserInfo","Header__NavLink","Header__Nickname","Header__Options","Header__LogoutIcon","Header__LoginLink","ScrollProvider","App","App__Container","Header__Container","App__ContentContainer","App__MainInfoContainer","createHashHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.018e2179.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImagePreview\":\"ImageUrlPreview_ImagePreview__2-XFX\",\"ImagePreview__Image\":\"ImageUrlPreview_ImagePreview__Image__A4mGJ\",\"ImagePreview__DeleteImage\":\"ImageUrlPreview_ImagePreview__DeleteImage__2m335\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeleteImage__ImageBox\":\"DeleteImage_DeleteImage__ImageBox__2Bnm-\",\"DeleteImage__OuterContainer\":\"DeleteImage_DeleteImage__OuterContainer__18_3B\",\"DeleteImage__Image\":\"DeleteImage_DeleteImage__Image__1rb31\",\"DeleteImage__XButton\":\"DeleteImage_DeleteImage__XButton__O95_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserInfo__Container\":\"UserInfo_UserInfo__Container__30IVI\",\"UserInfo__NavLink\":\"UserInfo_UserInfo__NavLink__2d0Oj\",\"UserInfo__Avatar\":\"UserInfo_UserInfo__Avatar__2o2NQ\",\"UserInfo__Nickname\":\"UserInfo_UserInfo__Nickname__20cSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentsBlock__Container\":\"CommentsBlock_CommentsBlock__Container__1zr93\",\"CommentsBlock__ButtonBox\":\"CommentsBlock_CommentsBlock__ButtonBox__2v9zI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users__Container\":\"Users_Users__Container__1cdvi\",\"Users__NoDataCard\":\"Users_Users__NoDataCard__fIond\",\"Users__NoDataText\":\"Users_Users__NoDataText__148CV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2zTXY\",\"error\":\"FormsControls_error__3jgrS\",\"formSummaryError\":\"FormsControls_formSummaryError__2PjTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Likes__FavouriteIcon--liked\":\"Likes_Likes__FavouriteIcon--liked__XY04N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__3YPUY\",\"List__SpinerContainer\":\"List_List__SpinerContainer__ykTQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Progress__Bar\":\"Progress_Progress__Bar__36Jz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile__Container\":\"Profile_Profile__Container__1Nkja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectFile__Input\":\"SelectFile_SelectFile__Input__kIiaj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImagePreview\":\"ImageFilePreview_ImagePreview__2qHmz\",\"ImagePreview__Image\":\"ImageFilePreview_ImagePreview__Image__1JR2b\",\"ImagePreview__DeleteImage\":\"ImageFilePreview_ImagePreview__DeleteImage__2os_1\",\"ImagePreview__Text\":\"ImageFilePreview_ImagePreview__Text__Ac8Rt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu__IconButton\":\"Menu_Menu__IconButton__3eUgk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Separator\":\"Separator_Separator__2Y0G8\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let initialState = {\r\n  pages: {\r\n    userPage: {\r\n      user: null,\r\n      posts: [],\r\n    },\r\n    usersPage: {\r\n      users: []\r\n    }\r\n  },\r\n  entities: { \r\n    posts: {},\r\n    comments: {},\r\n    users: {}\r\n  },\r\n};\r\n\r\nexport default initialState;\r\n\r\n\r\n\r\n","export const NEW_POST = 'NEW_POST';\r\nexport function newPostActionCreator(post) {\r\n  return {\r\n    type: NEW_POST,\r\n    data: post\r\n  };\r\n}\r\n\r\nexport const ADD_POSTS = 'ADD_POSTS';\r\nexport function addPostsActionCreator(posts) {\r\n  return {\r\n    type: ADD_POSTS,\r\n    data: posts\r\n  };\r\n}\r\n\r\nexport const SET_POSTS = 'SET_POSTS';\r\nexport function setPostsActionCreator(posts) {\r\n  return {\r\n    type: SET_POSTS,\r\n    data: posts\r\n  }\r\n}\r\n\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport function deletePostActionCreator(postId) {\r\n  return {\r\n    type: DELETE_POST,\r\n    data: postId\r\n  }\r\n}\r\n\r\nexport const EDIT_POST = 'EDIT_POST';\r\nexport function editPostActionCreator(post) {\r\n  return {\r\n    type: EDIT_POST,\r\n    data: post\r\n  }\r\n}\r\n\r\nexport const SET_LIKE = 'SET_LIKE';\r\nexport function setLikeActionCreator(data) {\r\n  return {\r\n    type: SET_LIKE,\r\n    data\r\n  }\r\n}\r\n\r\nexport const PUT_COMMENTS = 'PUT_COMMENTS';\r\nexport function putCommentsActionCreator(data) {\r\n  return {\r\n    type: PUT_COMMENTS,\r\n    data\r\n  }\r\n}\r\n\r\nexport const PUT_ONE_COMMENT = 'PUT_ONE_COMMENT';\r\nexport function putOneCommentActionCreator(data) {\r\n  return {\r\n    type: PUT_ONE_COMMENT,\r\n    data\r\n  }\r\n}\r\n\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport function deleteCommentActionCreator(data) {\r\n  return {\r\n    type: DELETE_COMMENT,\r\n    data\r\n  }\r\n}\r\n\r\n","export const SET_USER = 'SET_USER';\r\nexport const setUserActionCreator = (user) => {\r\n  return {\r\n    type: SET_USER, \r\n    data: user\r\n  }\r\n}\r\n\r\nexport const ADD_USERS = 'ADD_USERS';\r\nexport const addUsersActionCreator = (users) => {\r\n  return {\r\n    type: ADD_USERS,\r\n    data: users\r\n  }\r\n}","import initialState from \"@redux/store/initial-state\";\r\nimport {\r\n  ADD_POSTS,\r\n  DELETE_POST,\r\n  SET_POSTS,\r\n  NEW_POST\r\n} from \"@redux/actions/post.actions.js\";\r\nimport {\r\n  SET_USER\r\n} from \"@redux/actions/users.actions\";\r\n\r\nfunction userPageReducer(state = initialState.pages.userPage, action) {\r\n  switch (action.type) {\r\n    case NEW_POST: {\r\n      const newState = {\r\n        ...state,\r\n        posts: [\r\n          action.data._id,\r\n          ...state.posts\r\n        ]\r\n      };\r\n      return newState;\r\n    }\r\n\r\n    case ADD_POSTS: {\r\n      const newState = {\r\n        ...state,\r\n        posts: [\r\n          ...state.posts,\r\n          ...action.data.map(post => post._id)\r\n        ]\r\n      };\r\n      return newState;\r\n    }\r\n\r\n    case SET_POSTS: {\r\n      return {\r\n        ...state,\r\n        posts: action.data.map(post => post._id)\r\n      }\r\n    }\r\n\r\n    case DELETE_POST: {\r\n      const postId = action.data;\r\n      const posts = [...state.posts];\r\n      posts.splice(state.posts.indexOf(postId), 1);\r\n      return {\r\n        ...state,\r\n        posts\r\n      };\r\n    } \r\n    \r\n    case SET_USER: {\r\n      const user = action.data;\r\n      return {\r\n        ...state,\r\n        user\r\n      };\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userPageReducer;","import initialState from \"@redux/store/initial-state\";\r\nimport {\r\n  ADD_USERS\r\n} from \"@redux/actions/users.actions\";\r\n\r\nfunction usersPageReducer(state = initialState.pages.usersPage, action) {\r\n  switch (action.type) {\r\n    case ADD_USERS: {\r\n      return {\r\n        ...state,\r\n       users: [\r\n          ...state.users,\r\n          ...action.data.map(user => user._id).filter(userId => !state.users.includes(userId))\r\n        ]\r\n      }\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default usersPageReducer;","import { combineReducers } from \"redux\";\r\nimport userPageReducer from \"./user-page.reducer.js\";\r\nimport usersPageReducer from \"./users-page.reducer.js\";\r\n\r\nconst pagesReducer = combineReducers({\r\n  userPage: userPageReducer,\r\n  usersPage: usersPageReducer\r\n});\r\n\r\nexport default pagesReducer;","import initialState from \"@redux/store/initial-state\";\r\nimport {\r\n  PUT_COMMENTS,\r\n  PUT_ONE_COMMENT,\r\n  DELETE_COMMENT,\r\n  DELETE_POST,\r\n  \r\n} from \"@redux/actions/post.actions.js\";\r\n\r\nfunction entitiesCommentsReducer(state = initialState.entities.comments, action) {\r\n  switch (action.type) {\r\n    case PUT_COMMENTS: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const comments = action.data.commentsData;\r\n      comments.forEach(comment => {\r\n        newState[comment._id] = comment\r\n      })\r\n      return newState;\r\n    }\r\n    \r\n    case PUT_ONE_COMMENT: {\r\n      const comment = action.data.commentData;\r\n      const newState = {\r\n        ...state,\r\n        [comment._id]: comment\r\n      };\r\n      \r\n      return newState;\r\n    }\r\n\r\n    case DELETE_COMMENT: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const commentId = action.data.deletedComment._id;\r\n      delete newState[commentId];\r\n      return newState;\r\n    }\r\n    \r\n    case DELETE_POST: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const postId = action.data;\r\n      for (let comment in newState) {\r\n        if(newState[comment].post === postId) {\r\n          delete newState[comment];\r\n        }\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default entitiesCommentsReducer;","import initialState from \"@redux/store/initial-state\";\r\nimport {\r\n  DELETE_POST,\r\n  EDIT_POST,\r\n  SET_LIKE,\r\n  PUT_COMMENTS,\r\n  DELETE_COMMENT,\r\n  SET_POSTS,\r\n  ADD_POSTS,\r\n  NEW_POST,\r\n  PUT_ONE_COMMENT\r\n} from \"@redux/actions/post.actions.js\";\r\n\r\nfunction entitiesPostsReducer(state = initialState.entities.posts, action) {\r\n  switch (action.type) {\r\n    case NEW_POST: {\r\n      const newState = {\r\n        ...state,\r\n        [action.data._id]: action.data\r\n      };\r\n      return newState;\r\n    }\r\n\r\n    case ADD_POSTS:\r\n    case SET_POSTS: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      action.data.forEach(post => {\r\n        newState[post._id] = post;\r\n      });\r\n      return newState;\r\n    }\r\n\r\n    case DELETE_POST: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const postId = action.data;\r\n      delete newState[postId];\r\n      return newState;\r\n    }\r\n    case EDIT_POST: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const post = action.data;\r\n      newState[post._id] = {\r\n        ...newState[post._id],\r\n        ...post\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case SET_LIKE: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const postId = action.data._id;\r\n      newState[postId] = {\r\n        ...newState[postId],\r\n        ...action.data\r\n      };\r\n      return newState;\r\n    }\r\n\r\n    case PUT_COMMENTS: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const comments = action.data.commentsData;\r\n\r\n      comments.forEach(comment => {\r\n        if (newState[comment.post].comments?.includes(comment._id)) {\r\n          return;\r\n        }\r\n        newState[comment.post] = {\r\n          ...newState[comment.post],\r\n          comments: [...(newState[comment.post].comments || []), comment._id]\r\n        }\r\n      })\r\n      return newState;\r\n    }\r\n\r\n    case PUT_ONE_COMMENT: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const comment = action.data.commentData;\r\n      newState[comment.post] = {\r\n        ...newState[comment.post],\r\n        comments: [...(newState[comment.post].comments || []), comment._id],\r\n        nComments: action.data.nComments\r\n      }\r\n      return newState;\r\n    }\r\n    \r\n    case DELETE_COMMENT: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      const commentId = action.data.deletedComment._id;\r\n      const postId = action.data.deletedComment.post;\r\n      const comments = newState[postId].comments;\r\n      comments.splice(comments.indexOf(commentId), 1);\r\n      newState[postId] = {\r\n        ...newState[postId],\r\n        nComments: action.data.nComments\r\n      }\r\n      return newState;\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default entitiesPostsReducer;","import initialState from \"@redux/store/initial-state\";\r\nimport {\r\n  ADD_USERS\r\n} from \"@redux/actions/users.actions.js\";\r\n\r\nfunction entitiesUsersReducer(state = initialState.entities.users, action) {\r\n  switch (action.type) {\r\n    case ADD_USERS: {\r\n      const newState = {\r\n        ...state\r\n      };\r\n      action.data.forEach(user => {\r\n        newState[user._id] = user;\r\n      });\r\n      return newState;\r\n    }\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default entitiesUsersReducer;","import axios from \"axios\";\r\nimport { getDispatch, setUnauthedActionCreator } from \"@features/auth/useAuth\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_SERVER_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  withCredentials: true\r\n});\r\n\r\nconst refreshURL = 'auth/refresh';\r\nconst ignoreUnauthorizedResponseFromURLs = [\r\n  refreshURL,\r\n  'auth/login'\r\n];\r\n\r\nlet refreshPromise;\r\n\r\ninstance.interceptors.response.use(\r\n  /**\r\n   * Интерсептор для изъятия поля data у ответов\r\n   */\r\n  res => res.data,\r\n\r\n  /**\r\n   * Интерсептор для перехвата 401\r\n   * Выполняется попытка обновления access токена\r\n   * Если access токен обновил успешно - выполняется повторный запрос\r\n   */\r\n  async error => {\r\n    if (\r\n      error.response?.status === 401\r\n      && !ignoreUnauthorizedResponseFromURLs.includes(error.config.url)\r\n      && !error.config._isRetry\r\n    ) {\r\n      error.config._isRetry = true\r\n\r\n      try {\r\n        if (!refreshPromise) {\r\n          refreshPromise = instance.post(refreshURL).catch((e) => {\r\n            if(e.response?.status === 401) {\r\n              const dispatch = getDispatch();\r\n              dispatch(setUnauthedActionCreator());\r\n            }\r\n          })\r\n        }\r\n\r\n        await refreshPromise;\r\n\r\n        refreshPromise = null;\r\n\r\n        const result = await instance.request(error.config);\r\n        return result;\r\n      } catch (e) {\r\n        refreshPromise = null;\r\n\r\n        return Promise.reject(error);\r\n      } finally {\r\n        refreshPromise = null;\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\nexport default instance;","import { combineReducers } from \"redux\";\r\nimport entitiesCommentsReducer from \"./entities-comments.reducer.js\";\r\nimport entitiesPostsReducer from \"./entities-posts.reducer.js\";\r\nimport entitiesUsersReducer from \"./entities-users.reducer.js\";\r\n\r\nconst entitiesReducer = combineReducers({\r\n  posts: entitiesPostsReducer,\r\n  comments: entitiesCommentsReducer,\r\n  users: entitiesUsersReducer\r\n});\r\n\r\nexport default entitiesReducer;","import { reducer as formReducer } from \"redux-form\";\r\nimport pagesReducer from \"@redux/reducers/pages/index.js\";\r\nimport entitiesReducer from \"@redux/reducers/Entities-reducers/index.js\"\r\nimport { combineReducers } from \"redux\";\r\n\r\nlet reducers = combineReducers({\r\n  pages: pagesReducer,\r\n  entities: entitiesReducer,\r\n  form: formReducer\r\n});\r\n\r\nexport default reducers;","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport reducers from '@redux/reducers/index.js';\r\nimport initialState from \"./initial-state.js\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nlet store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n// window.store = store;\r\n\r\nexport default store;","// @ts-nocheck\r\nimport { useEffect, useMemo, useReducer, useCallback } from \"react\";\r\nimport { authApi } from \"@api/api\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  isAuthed: false,\r\n  isInitialized: false\r\n};\r\n\r\nconst SET_AUTHED = 'SET_AUTHED';\r\nfunction setAuthedActionCreator(user) {\r\n  return {\r\n    type: SET_AUTHED,\r\n    data: user\r\n  }\r\n};\r\n\r\nconst SET_UNAUTHED = 'SET_UNAUTHED';\r\nexport function setUnauthedActionCreator() {\r\n  return {\r\n    type: SET_UNAUTHED\r\n  }\r\n};\r\n\r\nlet _dispatch;\r\n\r\nfunction authReducer(state , action) {\r\n  switch(action.type) {\r\n    case SET_AUTHED:\r\n      let obj = {\r\n        user: action.data,\r\n        isAuthed: true,\r\n        isInitialized: true\r\n      }\r\n      console.log(obj);\r\n    return obj;\r\n    case SET_UNAUTHED:\r\n      return {\r\n        user: null,\r\n        isAuthed: false,\r\n        isInitialized: true\r\n      }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nfunction useAuth() {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  const register = useCallback((email, nickname, password) => {\r\n    return authApi.register(email, nickname, password)\r\n  }, []);\r\n\r\n  const login = useCallback((nickname, password) => {\r\n    return authApi.login(nickname, password)\r\n      .then(user => {\r\n        if(!user) {\r\n          dispatch(setUnauthedActionCreator());\r\n        }\r\n        dispatch(setAuthedActionCreator(user));\r\n      })\r\n      .catch((e) => {\r\n        dispatch(setUnauthedActionCreator());\r\n        throw e;\r\n      });\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    return authApi.logout()\r\n      .then(() => {\r\n        dispatch(setUnauthedActionCreator());\r\n      });\r\n  }, []);\r\n\r\n  const check = useCallback(() => {\r\n    return authApi.me()\r\n      .then(user => {\r\n        if(!user) {\r\n          dispatch(setUnauthedActionCreator());\r\n        }\r\n        dispatch(setAuthedActionCreator(user));\r\n      })\r\n      .catch((e) => {\r\n        dispatch(setUnauthedActionCreator());\r\n      });\r\n  }, []);\r\n\r\n  const changeUserData = useCallback(user => {\r\n    return dispatch(setAuthedActionCreator(user));\r\n  }, []);\r\n\r\n  //Проверяем один раз авторизирован ли пользователь\r\n  useEffect(() => {\r\n    check();\r\n  },[]);\r\n\r\n  const result = useMemo(() => ({\r\n    state,\r\n    register,\r\n    login,\r\n    logout,\r\n    check,\r\n    changeUserData\r\n  }), [\r\n    state,\r\n    register,\r\n    login,\r\n    logout,\r\n    check,\r\n    changeUserData\r\n  ]);\r\n\r\n  _dispatch = dispatch;\r\n \r\n  return result;\r\n}\r\n\r\nexport default useAuth;\r\n\r\nexport function getDispatch() {\r\n  return _dispatch;\r\n}\r\n\r\n","// @ts-nocheck\r\nimport instance from \"@api/axios\";\r\n\r\nexport const authApi = {\r\n  register(email, nickname, password) {\r\n    return instance.post('auth/register', {email, nickname, password});\r\n  },\r\n  login(login, password) {\r\n    return instance.post('auth/login', {login, password});\r\n  },\r\n  logout() {\r\n    return instance.post('auth/logout');\r\n  },\r\n  me() {\r\n    return instance.post('auth/me');\r\n  }\r\n};\r\n\r\nexport const usersApi = {\r\n  getUser(userId) {\r\n    return instance.get(`users/${userId}`);\r\n  },\r\n  getUsers(params) {\r\n    return instance.get('/users', {\r\n      params\r\n    });\r\n  },\r\n  changeUserAvatar(imageData) {\r\n    return instance.post(`user/avatar`, imageData);\r\n  },\r\n  changeUserBanner(imageData) {\r\n    return instance.post(`user/banner`, imageData);\r\n  },\r\n  deleteUserAvatar(avatar) {\r\n    return instance.delete('user/avatar', {data: {avatar}});\r\n  },\r\n  deleteUserBanner(banner) {\r\n    return instance.delete('user/banner', {data: {banner}});\r\n  },\r\n  // getStatus(userId) {\r\n  //   return instance.get(`profile/status/${userId}`);\r\n  // },\r\n  // updateStatus(status) {\r\n  //   return instance.put(`profile/status/`, {status: status}); //TODO: доделать статус?\r\n  // }\r\n};\r\n\r\nexport const postsApi = {\r\n  getPosts(userId, params) {\r\n    return instance.get(`posts/${userId}`, {\r\n      params\r\n    });\r\n  },\r\n  createPost(payload) {\r\n    return instance.post('posts', payload);\r\n  },\r\n  deletePost(postId) {\r\n    return instance.delete(`posts/${postId}`)\r\n  },\r\n  editPost(post) {\r\n    return instance.patch(`posts/${post._id}`, post);\r\n  },\r\n  addLike(postId) {\r\n    return instance.post(`posts/${postId}/like`);\r\n  },\r\n  removeLike(postId) {\r\n    return instance.delete(`posts/${postId}/like`);\r\n  },\r\n  addComment(comment) {\r\n    return instance.post(`posts/${comment.postId}/comment`, comment);\r\n  },\r\n  getComments(postId, params) {\r\n    return instance.get(`posts/${postId}/comments`, {\r\n      params\r\n    });\r\n  },\r\n  deleteComment(commentId) {\r\n    return instance.delete(`comments/${commentId}`);\r\n  },\r\n  getImage(postId) {\r\n    return instance.get(`posts/${postId}/image`);\r\n  },\r\n  deleteImage(postId) {\r\n    return instance.delete(`posts/${postId}/image`);\r\n  }\r\n};\r\n\r\nexport const imagesApi = {\r\n  addImage(imageData) {\r\n    return instance.post('images', imageData);\r\n  },\r\n  deleteImage(imageUrl) {\r\n    return instance.delete('images', imageUrl);\r\n  }\r\n};\r\n\r\n// getUsers (currentPage = 1, pageSize = 10) {\r\n//   return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n//   .then(response => {\r\n//     return  response.data;\r\n//   });\r\n// },\r\n\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport function useAuthContext() {\r\n  return useContext(AuthContext);\r\n}","import useAuth from \"./useAuth\";\r\nimport { AuthContext } from \"./auth.context\";\r\n\r\nfunction Auth ({\r\n  children\r\n}) {\r\n  const auth = useAuth();\r\n\r\n  return (\r\n    <AuthContext.Provider value={auth}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Auth;","import { useReducer, useCallback, useEffect } from \"react\";\r\nimport axios from \"@api/axios\";\r\n\r\n/**\r\n * @param {number} state\r\n * @param {{ type: any; }} action\r\n */\r\n\r\nfunction progressReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'increment':\r\n      return state + 1;\r\n    case 'decrement':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialState = 0;\r\n\r\nexport function useProgress() {\r\n  const [progressCounter, dispatch] = useReducer(progressReducer, initialState);\r\n\r\n  const increment = useCallback(() => {\r\n    dispatch({type: 'increment'})\r\n  }, [dispatch]);\r\n\r\n  const decrement = useCallback(() => {\r\n    dispatch({type: 'decrement'})\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    increment,\r\n    decrement,\r\n    progressCounter,\r\n    isProgress: progressCounter > 0\r\n  };\r\n}\r\n\r\nexport function useProgressInAxiosInterceptors(increment, decrement) {\r\n  useEffect(() => {\r\n    const requestInterceptorId = axios.interceptors.request.use(function (req) {\r\n      increment();\r\n      return req;\r\n    });\r\n\r\n    const responseInterceptorId = axios.interceptors.response.use(function(res) {\r\n      decrement();\r\n      return res;\r\n    }, function(err) {\r\n      decrement();\r\n      return Promise.reject(err);\r\n    });\r\n\r\n    return () => {\r\n      axios.interceptors.request.eject(requestInterceptorId);\r\n      axios.interceptors.response.eject(responseInterceptorId);\r\n    }\r\n  }, [increment, decrement]);\r\n}","import { createContext, useContext } from \"react\";\r\n\r\nexport const ProgressContext = createContext(null); // null - значение по умолчанию контекста\r\n\r\nexport function useProgressContext() {\r\n  return useContext(ProgressContext);\r\n}","import classes from \"./Progress.module.css\";\r\nimport { useProgress, useProgressInAxiosInterceptors } from \"./useProgress\";\r\nimport { ProgressContext } from \"./progress.context\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nfunction Progress({children}) {\r\n  const progress = useProgress();\r\n\r\n  useProgressInAxiosInterceptors(progress.increment, progress.decrement);\r\n\r\n  return (\r\n    <>\r\n      <ProgressContext.Provider value={progress}>\r\n        {\r\n          progress.isProgress &&\r\n          <LinearProgress\r\n            className={classes.Progress__Bar}\r\n            variant='indeterminate'\r\n            color='warning'\r\n          />\r\n        }\r\n        {children}\r\n      </ProgressContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Progress;","const required = 'Обязательное поле для ввода';\r\nconst maxTextLength = 25;\r\nconst maxPasswordLength = 35;\r\n\r\nconst lengthValidator = (valueLength, maxLength) => {\r\n  if (valueLength > maxLength) return 'Введите не больше ' + maxLength + ' символов';\r\n  return;\r\n};\r\n\r\nconst emailValidator = (email) => {\r\n  if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) return 'Неправильно введен email';\r\n  return;\r\n}\r\n\r\nexport const validate = values => {\r\n  const errors = {};\r\n  if (!values.email) {\r\n    errors.email = required;\r\n  } else {\r\n    errors.email = emailValidator(values.email);\r\n  }\r\n  if (!values.nickname) {\r\n    errors.nickname = required;\r\n  } else {\r\n    errors.nickname = lengthValidator(values.nickname.length, maxTextLength);\r\n  }\r\n  if (!values.password) {\r\n    errors.password = required;\r\n  } else {\r\n    errors.password = lengthValidator(values.password.length, maxPasswordLength);\r\n  }\r\n  if (!values.login) {\r\n    errors.login = required;\r\n  } else {\r\n    errors.login = lengthValidator(values.login.length, maxTextLength);\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport const commentTextValidator = (value) => {\r\n  return value?.length <= 750 && value?.length > 0;\r\n}\r\n\r\nexport const postTextValidator = (value) => {\r\n  return value?.length <= 750 && value?.length > 0;\r\n};\r\n\r\nexport const postValidator = (isTextValid, textValue, isImageInPost) => {\r\n  switch (true) {\r\n    case isTextValid && !isImageInPost:\r\n      return true;\r\n    case isImageInPost && isTextValid: \r\n      return true;\r\n    case isImageInPost && !textValue: \r\n      return true;\r\n    case isImageInPost && textValue <= 750:\r\n      return false;\r\n    default: return false;\r\n  }\r\n}","import classes from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      { hasError &&\r\n        <span>\r\n          {meta.error}\r\n        </span>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n const {input, meta, child, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  )\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  )\r\n};","import MuiButton from \"@mui/material/Button\";\r\n\r\nfunction Button (props) {\r\n  return (\r\n    <MuiButton\r\n      {...props}\r\n      sx={{fontSize: 12}}\r\n      color='success'\r\n    />\r\n  )\r\n}\r\nexport default Button;","import classes from \"./InfoDialog.module.scss\";\r\nimport MUIDialog from \"@mui/material/Dialog\";\r\nimport MUIDialogActions from \"@mui/material/DialogActions\";\r\nimport MUIDialogContent from \"@mui/material/DialogContent\";\r\nimport MUIDialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\n\r\nfunction InfoDialog ({\r\n  isShown,\r\n  title,\r\n  isProgress,\r\n  onClose,\r\n  message\r\n}) {\r\n  return (\r\n    <div>\r\n      <MUIDialog\r\n        open={isShown}\r\n        onClose={onClose}\r\n        className={classes.InfoDialog__Container}\r\n      >\r\n        <MUIDialogTitle className={classes.InfoDialog__Title}>\r\n          {title}\r\n        </MUIDialogTitle>\r\n        <MUIDialogContent className={classes.InfoDialog__Content}>\r\n          {message}\r\n        </MUIDialogContent>\r\n        <MUIDialogActions className={classes.InfoDialog__ButtonContainer}>\r\n          <Button \r\n            onClick={onClose}\r\n            disabled={isProgress}\r\n            className={classes.InfoDialog__Button}\r\n            color='success'\r\n          >\r\n            Oк\r\n          </Button>\r\n        </MUIDialogActions>\r\n      </MUIDialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoDialog;","import classes from \"./Register.route.module.scss\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuthContext } from \"@features/auth/auth.context\";\r\nimport { validate } from \"@utils/validators/validators\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from \"@features/FormsControls/FormsControls\";\r\nimport InfoDialog from \"@ui-kit/InfoDialog/InfoDialog\";\r\nimport { useProgressContext } from \"@features/progress/progress.context\";\r\nimport { Card, CardContent, CardHeader } from \"@mui/material\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\n\r\nconst RegisterForm = (props) => {\r\n  const {isProgress} = useAuthContext();\r\n  return (\r\n      <>\r\n      <form>\r\n        <div>\r\n          <Field \r\n            classname={classes.Register__Field}\r\n            name={'nickname'} \r\n            placeholder={'Логин'} \r\n            component={Input}\r\n            style={{width: 200, height: 25}} \r\n          />\r\n        </div>\r\n        <div>\r\n          <Field \r\n            classname={classes.Register__Field}\r\n            name={'email'} \r\n            placeholder={'Email'} \r\n            component={Input}\r\n            type={'email'}\r\n            style={{width: 200, height: 25, marginTop: 25}}\r\n          />\r\n        </div>\r\n        <div>\r\n         <Field \r\n            classname={classes.Register__Field}\r\n            name={'password'} \r\n            placeholder={'Пароль'} \r\n            component={Input}\r\n            type={'password'}  \r\n            style={{width: 200, height: 25, marginTop: 25}}\r\n          />\r\n        </div>\r\n        { props.error &&\r\n          <div className={classes.formSummaryError}>\r\n            {props.error}\r\n          </div>\r\n        }\r\n      </form>\r\n      <div className={classes.Register__ButtonContainer}>\r\n        <Button\r\n          className={classes.Register__Button}\r\n          color='success'\r\n          variant='outlined'\r\n          onClick={props.handleSubmit}\r\n          disabled={isProgress}\r\n        >\r\n          Подтвердить\r\n        </Button>\r\n      </div> \r\n      </>\r\n  )\r\n}\r\n\r\nconst RegisterReduxForm = reduxForm({\r\n  form: 'register',\r\n  validate: validate\r\n})(RegisterForm);\r\n\r\nfunction RegisterRoute() {\r\n  const {register} = useAuthContext();\r\n  const {isProgress} = useProgressContext();\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [isRegisterSuccessful, setIsRegisterSuccessful] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const onSubmit = (formData) => {\r\n    register(formData.email, formData.nickname, formData.password)\r\n     .then(() => {\r\n      setIsRegisterSuccessful(true);\r\n      setIsShown(true);\r\n     });\r\n  };\r\n\r\n  const onClose = () => {\r\n    if(isRegisterSuccessful) {\r\n      setIsRegisterSuccessful(false);\r\n      setIsShown(false);\r\n      history.push('/login');\r\n    } else {\r\n      setIsShown(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Card className={classes.Register__Container}>\r\n      <CardHeader title={'Регистрация'} className={classes.Login__CardHeader} />\r\n      <CardContent className={classes.Register__FormBox}>\r\n        <RegisterReduxForm onSubmit={onSubmit} />\r\n      </CardContent>\r\n    </Card>\r\n  \r\n    <InfoDialog \r\n      isShown={isShown}\r\n      title={''}\r\n      isProgress={isProgress}\r\n      onClose={onClose}\r\n      message={'Вы успешно зарегистрировались! Выполните вход в свой профиль'}\r\n    />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterRoute;","import MUIAvatar from \"@mui/material/Avatar\";\r\n\r\nfunction Avatar ({\r\n  userAvatar = '',\r\n  avatarHeight = null,\r\n  avatarWidth = null,\r\n  className = null\r\n}) {\r\n  return (\r\n    <MUIAvatar  \r\n      src={userAvatar}\r\n      sx={{ width: avatarWidth, height: avatarHeight}}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Avatar;","const Preloader = <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>;\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/defaultBanner.c22885fd.jpg\";","import classes from \"./ProfileInfo.module.scss\";\r\nimport Avatar from \"@ui-kit/Avatar/Avatar\";\r\nimport Preloader from \"../../../ui-kit/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport DefaultBanner from \"@assets/images/defaultBanner.jpg\";\r\n\r\nconst ProfileInfo = ({\r\n  profileUser\r\n}) => {\r\n  //TODO: сделать статус - \r\n  if (!profileUser) {\r\n    return Preloader;\r\n  } \r\n\r\n  return (\r\n   <div className={classes.ProfileInfo__UserInfo}>\r\n      {profileUser.banner ?\r\n        <img \r\n          src={profileUser.banner} \r\n          className={classes.ProfileInfo__Banner}\r\n        />\r\n        :  <img \r\n            src={DefaultBanner} \r\n            className={classes.ProfileInfo__Banner}\r\n          />\r\n      }\r\n      <div className={classes.ProfileInfo__Avatar}>\r\n        <Avatar\r\n          userAvatar={profileUser.avatar}\r\n          avatarHeight={150}\r\n          avatarWidth={150}\r\n        />\r\n      </div>\r\n      <div className={classes.ProfileInfo__Nickname}>\r\n        {profileUser.nickname}\r\n      </div>\r\n        {/* <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} /> */}\r\n        {/* status */}\r\n    </div>\r\n  )\r\n }\r\nexport default ProfileInfo;","import classes from \"./SelectFile.module.scss\";\r\nimport { useMemo, cloneElement, useRef, useCallback } from \"react\";\r\n\r\nfunction SelectFile ({\r\n  children,\r\n  onFileSelect = null,\r\n  isDisabled = false,\r\n  post = null\r\n}) {\r\n  const inputRef = useRef();\r\n\r\n  const onChange = (e) => {\r\n    const file = inputRef?.current?.files[0];\r\n    onFileSelect?.(file);\r\n    e.target.value = null;\r\n  };\r\n\r\n  const onButtonClick = (e) => {\r\n    inputRef?.current?.click();\r\n  };\r\n\r\n  const buttonClone = useMemo(() => {\r\n    if(!children) {\r\n      return;\r\n    }\r\n    return cloneElement(children, {\r\n      onClick: (e) => {\r\n        children.props?.onClick?.(e);\r\n        if(!post) {\r\n          onButtonClick(e);\r\n        }\r\n      },\r\n      disabled: isDisabled\r\n    });\r\n  }, [children, isDisabled]);\r\n\r\n  return (\r\n    <>\r\n      <input \r\n        ref={inputRef}\r\n        type='file'\r\n        accept='.jpg, .jpeg, .png'\r\n        onChange={onChange}\r\n        className={classes.SelectFile__Input}\r\n      />\r\n      {buttonClone}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SelectFile;","import MuiIconButton from \"@mui/material/IconButton\";\r\n\r\nfunction IconButton(props) {\r\n  return(\r\n    <MuiIconButton {...props}/>\r\n  )\r\n}\r\n\r\nexport default IconButton;","import classes from \"./DeleteImage.module.scss\"\r\nimport classNames from \"classnames\";\r\nimport { Children, cloneElement } from \"react\";\r\nimport IconButton from \"@ui-kit/IconButton/IconButton\";\r\nimport { XCircleFill } from \"react-bootstrap-icons\";\r\n\r\nfunction DeleteImage ({\r\n  children,\r\n  className = '',\r\n  onDeleteImage\r\n}) {\r\n  const onClick = () => {\r\n    onDeleteImage?.();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classNames(classes.DeleteImage__OuterContainer, className)}>\r\n        <div className={classNames(classes.DeleteImage__ImageBox)}>\r\n          {Children.map(children, (child) => { \r\n            return cloneElement(child, {\r\n              className: classNames(child.props.className, classes.DeleteImage__Image)\r\n            });\r\n          })}\r\n          <IconButton className={classes.DeleteImage__XButton} onClick={onClick}>\r\n            <XCircleFill />\r\n          </IconButton>\r\n        </div>\r\n      </div> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default DeleteImage;","import classes from \"./ImageUrlPreview.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport DeleteImage from \"@ui-kit/DeleteImage/DeleteImage\";\r\n\r\nfunction ImageUrlPreview ({\r\n  imageUrl = '',\r\n  className = '',\r\n  onDeleteImage = null,\r\n  isDeleteShown = false,\r\n  imageClassName = null\r\n}) {\r\n  if (!imageUrl) {\r\n    return null;\r\n  }\r\n\r\n  let imagePreview = <img src={imageUrl} className={classNames(classes.ImagePreview__Image, imageClassName)}/>\r\n  return (\r\n    <>\r\n      <div className={classNames(classes.ImagePreview, className)}>\r\n        {isDeleteShown ? \r\n          <DeleteImage \r\n            className={classes.ImagePreview__DeleteImage}\r\n            onDeleteImage={onDeleteImage}\r\n          >\r\n            {imagePreview}\r\n          </DeleteImage>\r\n          : \r\n          <div className={classes.ImagePreview}>\r\n            {imagePreview}\r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageUrlPreview;","import classes from \"./ImageFilePreview.module.scss\";\r\nimport ImageUrlPreview from \"@ui-kit/ImageUrlPreview/ImageUrlPreview\";\r\n\r\nfunction ImageFilePreview ({\r\n  imageFile = null,\r\n  className = '',\r\n  onDeleteImage = null,\r\n  isDeleteShown = false,\r\n  imageClassName = null\r\n}) {\r\n  if (!imageFile) {\r\n    return null;\r\n  }\r\n\r\n  const imageUrl = window.URL.createObjectURL(imageFile);\r\n\r\n  return (\r\n    <>\r\n      <ImageUrlPreview \r\n        className={className}\r\n        onDeleteImage={onDeleteImage}\r\n        isDeleteShown={isDeleteShown}\r\n        imageUrl={imageUrl}\r\n        imageClassName={imageClassName}\r\n      />\r\n      <div className={classes.ImagePreview__Text}>\r\n        {imageFile.name} ({imageFile.size} b)\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageFilePreview;","import classes from \"./PostCreator.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport { useState, useMemo, cloneElement, useEffect } from \"react\";\r\nimport { useProgress } from \"@features/progress/useProgress.js\";\r\nimport { imagesApi } from \"@api/api\";\r\nimport SelectFile from \"@ui-kit/SelectFile/SelectFile\";\r\nimport ImageFilePreview from \"@ui-kit/ImageFilePreview/ImageFilePreview\";\r\nimport IconButton from \"@ui-kit/IconButton/IconButton\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\nimport AddPhotoAlternateIcon from \"@mui/icons-material/AddPhotoAlternate\";\r\nimport { postTextValidator, postValidator } from \"@utils/validators/validators\";\r\n\r\n// function MyFormHelperText() {\r\n//   const { focused } = useFormControl() || {};\r\n\r\n//   const helperText = useMemo(() => {\r\n//     if (focused) {\r\n//       return 'Введите не больше 10 символов';\r\n//     }\r\n//     return;\r\n//   }, [focused]);\r\n\r\n//   return <FormHelperText>{helperText}</FormHelperText>;\r\n// }\r\n\r\nfunction PostCreator ({\r\n  onPostConfirm,\r\n  textField,\r\n  buttonContent,\r\n  postText = '',\r\n  isShowCancelButton = false,\r\n  cancelChange = null,\r\n  openImageDialog = null,\r\n  post = null,\r\n  wasPostImageChanged = false,\r\n  isImageInPost = false,\r\n  wasImageInPost = false\r\n}) {\r\n  const {increment, decrement, isProgress} = useProgress();\r\n  const [textState, setTextState] = useState({\r\n    value: '',\r\n    isValid: false\r\n  });\r\n\r\n  const [isAddingImage, setAddingImage] = useState(false);\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [wasTextChanged, setWasTextChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n   setText(postText);\r\n  }, [postText]);\r\n\r\n  const onConfirmPost = () => {\r\n    increment();\r\n    let post = {\r\n      text: textState.value\r\n    };\r\n    \r\n    return Promise.resolve(imageFile \r\n      ? uploadImage()\r\n          .then(imageUrl => {\r\n            post.image = imageUrl\r\n          })\r\n      : null\r\n    ).then(() => {\r\n      return onPostConfirm(post)\r\n        .then(() => {\r\n          setText('');\r\n          setImageFile(null);\r\n        })\r\n        .finally(() => {\r\n          setAddingImage(false);\r\n          setWasTextChanged(false);\r\n          decrement();\r\n        })\r\n    })\r\n  };\r\n\r\n  const setText = (text) => {\r\n    setTextState({\r\n      value: text,\r\n      isValid: postTextValidator(text)\r\n    });\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    setWasTextChanged(true);\r\n    const value = e.target.value\r\n    setText(value);\r\n  };\r\n\r\n  const textFieldClone = useMemo(() => {\r\n    return cloneElement(textField, {\r\n      className: classNames(textField.props.className, classes.PostCreator__TextField),\r\n      onChange: (e) => {\r\n        onTextChange(e);\r\n      },\r\n      value: textState.value\r\n    });\r\n  }, [textField, textState.value]);\r\n\r\n  const onImageSelect = (image) => {\r\n    setAddingImage(true);\r\n    setImageFile(image);\r\n  };\r\n\r\n  const uploadImage = () => {\r\n    const formData = new FormData();\r\n    formData.append('img', imageFile);\r\n    return imagesApi.addImage(formData)\r\n      .then(response => {\r\n        return response.imageUrl\r\n      })\r\n  };\r\n\r\n  const onClickAddImageButton = () => {\r\n    if(post) {\r\n      openImageDialog();\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if(imageFile) {\r\n      setImageFile(null);\r\n      setAddingImage(false);\r\n    }\r\n    if(post) {\r\n      cancelChange();\r\n      setWasTextChanged(false);\r\n    }\r\n  };\r\n  \r\n  const isDisabled = () => {\r\n    if (post) {\r\n      let isPostValid = postValidator(textState.isValid, textState.value, isImageInPost);\r\n\r\n      switch(true) {\r\n        case isProgress: \r\n          return true;\r\n        case !isPostValid:\r\n          return true;\r\n        case isPostValid && !wasTextChanged && wasPostImageChanged && !wasImageInPost && !isImageInPost:\r\n          return true;\r\n        case isPostValid && (wasPostImageChanged || wasTextChanged):\r\n          return false;\r\n        case isPostValid && !wasPostImageChanged && !wasTextChanged:\r\n          return true;\r\n        default: return false;\r\n      }\r\n    }\r\n    else {\r\n      switch (true) {\r\n        case isAddingImage:\r\n          return false;\r\n        case !textState.isValid || isProgress:\r\n          return true;\r\n        default: return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.PostCreator__CardContentBox}>\r\n      {textFieldClone}\r\n      {\r\n        imageFile &&\r\n          <ImageFilePreview\r\n            imageFile={imageFile}\r\n            isDeleteShown={true}\r\n            className={classes.PostCreator__ImagePreview}\r\n            onDeleteImage={onCancel}\r\n          />\r\n      }\r\n      {/* <FormControl sx={{ width: '100%' }}>\r\n        <MyFormHelperText /> \r\n      </FormControl> */}\r\n      <div className={classes.PostCreator__CardActions} >\r\n        <div className={classes.PostCreator__ButtonsContainer}>\r\n          <Button \r\n            className={classes.PostCreator__Button}\r\n            variant='outlined'\r\n            color='success'\r\n            onClick={onConfirmPost}\r\n            disabled={isDisabled()}\r\n          >\r\n            {buttonContent}\r\n          </Button>\r\n          {isShowCancelButton || imageFile ?\r\n            <Button \r\n              className={classes.PostCreator__Button}\r\n              variant='outlined'\r\n              color='success'\r\n              onClick={onCancel}\r\n              disabled={isProgress}\r\n            >\r\n              Отмена\r\n            </Button> :\r\n            null\r\n          }\r\n        </div>\r\n        <div className={classes.PostCreator__IconsContainer}>\r\n          <SelectFile \r\n            onFileSelect={onImageSelect}\r\n            isDisabled={isImageInPost || isAddingImage}\r\n            post={post}\r\n          >\r\n            <IconButton \r\n              onClick={onClickAddImageButton}\r\n            >\r\n              <AddPhotoAlternateIcon className={classes.PostCreator__IconButton}/>\r\n            </IconButton>\r\n          </SelectFile>\r\n        </div>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default PostCreator;","import classes from \"./Likes.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport IconButton from \"@ui-kit/IconButton/IconButton\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { useProgress } from \"@features/progress/useProgress.js\";\r\n\r\nfunction Likes ({\r\n  likes,\r\n  addLike,\r\n  removeLike,\r\n  isLiked = false,\r\n  authedUserId\r\n}) {\r\n  const {increment, decrement, isProgress} = useProgress();\r\n\r\n  const onClick = () => {\r\n    increment();\r\n    if(isLiked) {\r\n      removeLike()\r\n      .finally(() => {\r\n        decrement();\r\n      })\r\n    }\r\n    else {\r\n      addLike()\r\n      .finally(() => {\r\n        decrement();\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton \r\n        onClick={onClick}\r\n        disabled={!authedUserId || isProgress}\r\n      >\r\n        <FavoriteIcon className={classNames(classes.Likes__FavouriteIcon, {\r\n          [classes['Likes__FavouriteIcon--liked']]: isLiked\r\n        })}/>\r\n      </IconButton> \r\n      <div>\r\n        {likes || ''} \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Likes;","import moment from \"moment\";\r\nimport 'moment/locale/ru';\r\nmoment.locale('ru');\r\n\r\nexport function passedTimeCalc (creationTime) {\r\n  const creationDate = moment(creationTime);\r\n  let currentDate = moment();\r\n  let diffTime = currentDate.diff(creationDate, 'milliseconds');\r\n  \r\n  let timeMessage;\r\n  let timeout;\r\n\r\n  switch(true) {\r\n    case diffTime >= 86400000:\r\n      let isSameYear = moment(creationDate).isSame(currentDate, 'year');\r\n      if(isSameYear) {\r\n        timeMessage = creationDate.format('D MMMM, HH:mm');\r\n        \r\n      } else {\r\n        timeMessage = creationDate.format('D MMMM YYYY, HH:mm');\r\n      }\r\n      timeout = null;\r\n      break;\r\n\r\n    case diffTime >= 5400000 && diffTime < 86400000:\r\n      let isSameDay = moment(creationDate).isSame(currentDate, 'day');\r\n      if(isSameDay) {\r\n        timeMessage = creationDate.format('[Cегодня], HH:mm');\r\n      } else {\r\n        timeMessage = creationDate.format('D MMMM, HH:mm');\r\n      }\r\n      timeout = 82800000;\r\n      break;\r\n\r\n    case diffTime >= 3600000 && diffTime < 5400000:\r\n      timeMessage = 'час назад';\r\n      timeout = 1200000;\r\n      break;\r\n\r\n    case diffTime >= 2400000 && diffTime < 3600000:\r\n      timeMessage = '40 минут назад';\r\n      timeout = 1200000;\r\n      break;\r\n\r\n    case diffTime >= 1800000 && diffTime < 2400000:\r\n      timeMessage = 'полчаса назад';\r\n      timeout = 600000;\r\n      break;\r\n\r\n    case diffTime >= 1200000 && diffTime < 1800000:\r\n      timeMessage = '20 минут назад';\r\n      timeout = 600000;\r\n      break;\r\n\r\n    case diffTime >= 600000 && diffTime < 1200000:\r\n      timeMessage = '10 минут назад';\r\n      timeout = 600000;\r\n      break;\r\n\r\n    case diffTime >= 300000 && diffTime < 600000:\r\n      timeMessage = '5 минут назад';\r\n      timeout = 300000;\r\n      break;\r\n\r\n    case diffTime >= 120000 && diffTime < 300000: \r\n      timeMessage = '2 минуты назад';\r\n      timeout = 180000;\r\n      break;\r\n\r\n    case diffTime >= 60000 && diffTime < 120000:\r\n      timeMessage = 'минуту назад';\r\n      timeout = 120000;\r\n      break;\r\n\r\n    case diffTime >= 0 && diffTime < 60000:\r\n      timeMessage = 'только что';\r\n      timeout = 60000;\r\n      break;\r\n      \r\n    default:\r\n      timeMessage = creationDate.format('D MMMM YYYY, HH:mm');\r\n      timeout = null;\r\n  }\r\n  \r\n  return {\r\n    timeMessage,\r\n    timeout\r\n  }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { passedTimeCalc } from \"./passedTimeCalc\";\r\n\r\nfunction DateBar ({\r\n  creationDate,\r\n  updateDate = null,\r\n  className = ''\r\n}) {\r\n  let [currentTimeout, setCurrentTimeout] = useState(null);\r\n  let [timeMessage, setCurrentTime] = useState('');\r\n  \r\n  useEffect(() => {  \r\n    refreshTime();\r\n  }, [creationDate]);\r\n\r\n  function updateTimeout(timeout) {\r\n    if (timeout === null) {\r\n      setCurrentTimeout(null);\r\n      return;\r\n    } \r\n\r\n    if(currentTimeout) {\r\n      clearTimeout(currentTimeout);\r\n    }\r\n\r\n    const timeoutId = setTimeout(() => {\r\n      refreshTime();\r\n    }, timeout);\r\n\r\n    setCurrentTimeout(timeoutId);\r\n  }\r\n  \r\n  const refreshTime = () => {\r\n    const {timeMessage, timeout} = passedTimeCalc(creationDate);\r\n    setCurrentTime(timeMessage);\r\n    updateTimeout(timeout);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {creationDate === updateDate\r\n      ? timeMessage\r\n      : timeMessage + ' ' + \"(ред.)\"\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DateBar;","import classes from './Menu.module.scss';\r\nimport { useState, Children, cloneElement, useCallback, useEffect } from \"react\";\r\nimport { useProgress } from \"@features/progress/useProgress.js\";\r\nimport MuiMenu from \"@mui/material/Menu\";\r\nimport IconButton from \"@ui-kit/IconButton/IconButton\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nfunction Menu({\r\n  children,\r\n  changeMode\r\n}) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const {increment, decrement, isProgress} = useProgress();\r\n\r\n  useEffect(() => {\r\n    if(changeMode) {\r\n      increment();\r\n    }\r\n    else decrement();\r\n  },[changeMode])\r\n\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    increment();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    if(!changeMode) {\r\n      decrement();\r\n    }\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return isProgress;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        id='basic-button'\r\n        onClick={handleClick}\r\n        disabled={isDisabled()}\r\n      >\r\n        <MoreVertIcon className={classes.Menu__IconButton}/>\r\n      </IconButton>\r\n      <MuiMenu\r\n        id='basic-menu'\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        {Children.map(children, (child) => {\r\n          //переопределяем у каждого child пропс onClick и добавляем обработку закрытия меню\r\n          return cloneElement(child, {\r\n            onClick: () => {\r\n              child.props.onClick?.();\r\n              handleClose();\r\n            }\r\n          });\r\n        })}\r\n      </MuiMenu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu;","import classes from \"./ImageDialog.module.scss\";\r\nimport { useState } from \"react\";\r\nimport { useProgressContext } from \"@features/progress/progress.context\";\r\nimport MUIDialog from \"@mui/material/Dialog\";\r\nimport MUIDialogActions from \"@mui/material/DialogActions\";\r\nimport MUIDialogContent from \"@mui/material/DialogContent\";\r\nimport MUIDialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\nimport AddPhotoAlternateIcon from \"@mui/icons-material/AddPhotoAlternate\";\r\nimport SelectFile from \"@ui-kit/SelectFile/SelectFile\";\r\nimport ImageFilePreview from \"@ui-kit/ImageFilePreview/ImageFilePreview\";\r\n\r\nfunction ImageDialog({\r\n  isShown,\r\n  title,\r\n  closeDialog,\r\n  onImageConfirm,\r\n}) {\r\n  const {isProgress} = useProgressContext();\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  const onConfirm = () => {\r\n    onImageConfirm(imageFile)\r\n    .then(() => {\r\n      onCloseDialog();\r\n    })\r\n  };\r\n\r\n  const onImageSelect = (image) => {\r\n    setImageFile(image);\r\n  };\r\n\r\n  const onCloseDialog = () => {\r\n    if(imageFile) {\r\n      setImageFile(null);\r\n    }\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MUIDialog\r\n        open={isShown}\r\n        onClose={onCloseDialog}\r\n      >\r\n        <MUIDialogTitle className={classes.ImageDialog__Title}>\r\n          {title}\r\n        </MUIDialogTitle>\r\n        <MUIDialogContent className={classes.ImageDialog__Content}>\r\n          {\r\n            imageFile &&\r\n              <ImageFilePreview\r\n                imageFile={imageFile}\r\n              />\r\n          }\r\n        </MUIDialogContent>\r\n        <MUIDialogActions className={classes.ImageDialog__ButtonContainer}>\r\n          <SelectFile \r\n            onFileSelect={onImageSelect}\r\n            isDisabled={isProgress}\r\n          >\r\n            <Button \r\n              startIcon={<AddPhotoAlternateIcon />}\r\n              disabled={isProgress}\r\n              className={classes.ImageDialog__Button}\r\n              color='success'\r\n            >\r\n              Выбрать\r\n            </Button>\r\n          </SelectFile>\r\n          {imageFile && \r\n            <Button \r\n              onClick={onConfirm}\r\n              disabled={isProgress}\r\n              className={classes.ImageDialog__Button}\r\n              color='success'\r\n            >\r\n              Подтвердить\r\n            </Button>\r\n          }\r\n          <Button \r\n            onClick={onCloseDialog}\r\n            disabled={isProgress}\r\n            className={classes.ImageDialog__Button}\r\n            color='success'\r\n          >\r\n            Отмена\r\n          </Button>\r\n        </MUIDialogActions>\r\n      </MUIDialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageDialog;","import classes from \"./ConfirmDialog.module.scss\";\r\nimport { useProgressContext } from \"@features/progress/progress.context\";\r\nimport MUIDialog from \"@mui/material/Dialog\";\r\nimport MUIDialogActions from \"@mui/material/DialogActions\";\r\nimport MUIDialogContent from \"@mui/material/DialogContent\";\r\nimport MUIDialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\n\r\nfunction ConfirmDialog ({\r\n  isShown,\r\n  title,\r\n  onConfirm,\r\n  onCancel,\r\n  message\r\n}) {\r\n  const {isProgress} = useProgressContext();\r\n  return (\r\n    <div>\r\n      <MUIDialog\r\n        open={isShown}\r\n        onClose={onCancel}\r\n        className={classes.ConfirmDialog__Container}\r\n      >\r\n        <MUIDialogTitle className={classes.ConfirmDialog__Title}>\r\n          {title}\r\n        </MUIDialogTitle>\r\n        <MUIDialogContent className={classes.ConfirmDialog__Content}>\r\n          {message}\r\n        </MUIDialogContent>\r\n        <MUIDialogActions className={classes.ConfirmDialog__ButtonContainer}>\r\n          <Button \r\n            onClick={onConfirm}\r\n            disabled={isProgress}\r\n            color='success'\r\n            className={classes.ConfirmDialog__Button}\r\n          >\r\n            Подтвердить\r\n          </Button>\r\n          <Button \r\n            onClick={onCancel}\r\n            disabled={isProgress}\r\n            color='success'\r\n            className={classes.ConfirmDialog__Button}\r\n          >\r\n            Отмена\r\n          </Button>\r\n        </MUIDialogActions>\r\n      </MUIDialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmDialog;","import { styled } from \"@mui/material/styles\";\r\nimport IconButton from \"@ui-kit/IconButton/IconButton\";\r\n\r\n  const Expander = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n  })(({ theme, expand }) => ({\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  }));\r\n\r\nexport default Expander;\r\n","import classes from \"./Separator.module.css\";\r\n\r\nfunction Separator () {\r\n  return (\r\n    <span className={classes.Separator}> \r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Separator;","import classes from \"./Comment.module.scss\";\r\nimport { useState } from \"react\";\r\nimport Avatar from \"@ui-kit/Avatar/Avatar\";\r\nimport { CardHeader, Typography } from \"@mui/material\";\r\nimport DateBar from \"@ui-kit/DateBar/DateBar\";\r\nimport IconButton from \"@ui-kit/IconButton/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport ConfirmDialog from \"@ui-kit/ConfirmDialog/ConfirmDialog\";\r\n\r\nfunction Comment ({\r\n  comment,\r\n  deleteComment,\r\n  authedUserId\r\n}) {\r\n  const [isDialogOpened, setIsDialogOpened] = useState(false);\r\n\r\n  const onDeleteComment = () => {\r\n    if(authedUserId === comment.user) {\r\n      deleteComment(comment._id)\r\n      .finally(() => {\r\n        setIsDialogOpened(false);\r\n      });\r\n    } else return;\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div className={classes.Comment__Box}>\r\n        <CardHeader\r\n          className={classes.Comment__Header}\r\n          avatar={\r\n            <Avatar\r\n              className={classes.Comment__Avatar}\r\n              userAvatar={comment.userAvatar}\r\n              avatarHeight={30}\r\n              avatarWidth={30}\r\n            />\r\n          }\r\n          action= {\r\n            authedUserId === comment.user ? \r\n              <IconButton \r\n                className={classes.Comment__Icon}\r\n                onClick={() => setIsDialogOpened(true)}\r\n              >\r\n                <CloseIcon \r\n                  sx={{ width: 15, height: 15, padding: 0 }} \r\n                  className={classes.Comment__CloseIcon}\r\n                />\r\n              </IconButton>\r\n              : null\r\n          }\r\n          title={comment.userNickname}\r\n          subheader={ \r\n            <DateBar\r\n              creationDate={comment.createdAt}\r\n              className={classes.Comment__DateBar}\r\n              updateDate={comment.updatedAt}\r\n            />\r\n          }\r\n        />\r\n         <Typography className={classes.Comment__Typography}>\r\n            <div className={classes.Comment__Text}>\r\n              {comment.text}\r\n            </div>\r\n          </Typography>\r\n      </div>\r\n      <ConfirmDialog\r\n        isShown={isDialogOpened}\r\n        title={\"Удаление комментария\"}\r\n        message={\"Вы действительно хотите удалить этот комментарий?\"}\r\n        onCancel={() => {setIsDialogOpened(false)}}\r\n        onConfirm={onDeleteComment}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comment;","import classes from \"./CommentsCreator.module.css\";\r\nimport { useState } from \"react\";\r\nimport { useProgress } from \"@features/progress/useProgress.js\";\r\nimport { FormControl } from \"@mui/material\";\r\nimport FilledInput from \"@mui/material/FilledInput\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\nimport Avatar from \"@ui-kit/Avatar/Avatar\";\r\nimport { commentTextValidator } from \"@utils/validators/validators\";\r\n\r\nfunction CommentsCreator ({\r\n  authedUser,\r\n  confirmed,\r\n}) {\r\n  const{increment, decrement, isProgress} = useProgress();\r\n  \r\n  const [textState, setTextState] = useState({\r\n    value: '',\r\n    isValid: false\r\n  });\r\n\r\n  const setText = (text) => {\r\n    setTextState({\r\n      value: text,\r\n      isValid: commentTextValidator(text)\r\n    });\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    const value = e.target.value\r\n    setText(value);\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    increment();\r\n    const comment = {\r\n      text: textState.value\r\n    };\r\n\r\n    confirmed(comment)\r\n    .then(() => {\r\n      setText('');\r\n      decrement();\r\n    })\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return !textState.isValid || isProgress;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.CommentsCreator__Box}>\r\n      <div className={classes.CommentsCreator__UserCommentBox}>\r\n        <Avatar\r\n          className={classes.CommentsCreator__Avatar}\r\n          userAvatar={authedUser.avatar}\r\n          avatarHeight={30}\r\n          avatarWidth={30}\r\n        />\r\n        <FormControl\r\n          className={classes.CommentsCreator__TextField}\r\n          variant='filled'\r\n          sx={{}}\r\n        >\r\n          <FilledInput\r\n            placeholder={'Написать комментарий...'}\r\n            multiline\r\n            fullWidth\r\n            maxRows={4}\r\n            color='success'\r\n            size='small'\r\n            sx={{}}\r\n            onChange={onTextChange}\r\n            value={textState.value}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <Button\r\n        className={classes.CommentsCreator__Button}\r\n        variant='outlined'\r\n        color='success'\r\n        sx={{ height: 30 }}\r\n        onClick={onConfirm}\r\n        disabled={isDisabled()}\r\n      >\r\n        Отправить\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentsCreator;","import {memo} from 'react';\r\nimport classes from './List.module.scss';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport classNames from 'classnames';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nfunction List({\r\n  className = null,\r\n  items,\r\n  nextMethod = null,\r\n  isHasMore = null,\r\n  scrollableTargetId = null,\r\n  itemBuilder,\r\n  noData = null\r\n}) {\r\n  let isNoDataShown = !isHasMore && items.length === 0;\r\n  return (\r\n    <div className={classNames(classes.List, className)}>\r\n      {isNoDataShown \r\n        ? noData\r\n        : <InfiniteScroll\r\n            dataLength={(items || []).length}\r\n            next={nextMethod}\r\n            hasMore={isHasMore}\r\n            scrollableTarget={scrollableTargetId}\r\n            scrollThreshold='300px'\r\n            loader={\r\n              <div className={classes.List__SpinerContainer}>\r\n                <CircularProgress color='warning' />\r\n              </div>\r\n            } // TODO\r\n            // TODO: endMessage={<div>Все данные загружены</div>}\r\n          >\r\n            {\r\n              items.map(itemBuilder)\r\n            }\r\n          </InfiniteScroll>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(List);","import classes from \"./CommentsBlock.module.scss\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { postsApi } from \"@api/api\";\r\nimport { useAuthContext } from \"@features/auth/auth.context\";\r\nimport { CardContent } from \"@mui/material\";\r\nimport Separator from \"@ui-kit/Separator/Separator.jsx\";\r\nimport Comment from \"../Comment/Comment\";\r\nimport CommentsCreator from \"../CommentsCreator/CommentsCreator\";\r\nimport List from \"@ui-kit/List/List\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\n\r\nconst pageSize = 5;\r\n\r\nfunction CommentsBlock ({\r\n  comments,\r\n  expanded,\r\n  postId,\r\n  post,\r\n  putComments,\r\n  putOneComment,\r\n  deleteComment\r\n}) {\r\n  const {state: {user: authedUser}} = useAuthContext();\r\n  const [isHasMore, setIsHasMore] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if(expanded) {\r\n      setPage(1);\r\n      loadNextPage()\r\n    }\r\n  }, [expanded])\r\n\r\n  const loadNextPage = useCallback(() => {\r\n    postsApi.getComments(postId, {page, limit: pageSize, sort: {createdAt: 1}})\r\n          .then(response => {\r\n            putComments(response)\r\n            setIsHasMore(response.hasNextPage);\r\n            setPage(page + 1);\r\n          })\r\n  }, [putComments, page]);\r\n\r\n  const onAddComment = (commentData) => {\r\n    return postsApi.addComment({\r\n      postId, \r\n      ...commentData\r\n    })\r\n      .then(response => {\r\n        putOneComment(response);\r\n      })\r\n  };\r\n\r\n  const onDeleteComment = (commentId) => {\r\n    return postsApi.deleteComment(commentId)\r\n      .then(comment => {\r\n        deleteComment(comment);\r\n      })\r\n  };\r\n\r\n  return (\r\n    <CardContent\r\n      className={classes.CommentsBlock__Container}\r\n    >\r\n      <List\r\n        items={comments}\r\n        isHasMore={isHasMore}\r\n        itemBuilder={comment => (\r\n          <div key={comment._id} className={classes.CommentsBlock__CommentContainer}>\r\n            <Separator />\r\n            <Comment \r\n              comment={comment}\r\n              deleteComment={onDeleteComment}\r\n              authedUserId={authedUser._id}\r\n            />\r\n          </div>\r\n        )}\r\n      />\r\n      {isHasMore && post.nComments > comments.length\r\n        ?\r\n          <div className={classes.CommentsBlock__ButtonBox}>\r\n            <Button \r\n              onClick={loadNextPage}\r\n              sx={{fontWeight: 'bolder'}}\r\n            >\r\n              Показать еще\r\n            </Button>\r\n          </div>\r\n        : null\r\n      }\r\n    \r\n    <Separator />\r\n\r\n    <CommentsCreator \r\n      authedUser={authedUser}\r\n      confirmed={onAddComment}\r\n    />\r\n  </CardContent>\r\n  )\r\n}\r\n\r\nexport default CommentsBlock;\r\n\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  putCommentsActionCreator,\r\n  putOneCommentActionCreator,\r\n  deleteCommentActionCreator,\r\n} from \"@redux/actions/post.actions\";\r\nimport CommentsBlock from \"./CommentsBlock\";\r\n\r\nlet mapStateToProps = (state, ownProps) => {\r\n  const {postId} = ownProps;\r\n  return {\r\n    comments: state.entities.posts[postId].comments?.map(commentId => {\r\n      return state.entities.comments[commentId];\r\n    }) || []\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    putComments: (data) => {\r\n      dispatch(putCommentsActionCreator(data));\r\n    },\r\n    putOneComment: (data) => {\r\n      dispatch(putOneCommentActionCreator(data));\r\n    },\r\n    deleteComment: (comment) => {\r\n      dispatch(deleteCommentActionCreator(comment));\r\n    }\r\n  }\r\n};\r\n\r\nconst CommentsBlockConnected = connect(mapStateToProps, mapDispatchToProps)(CommentsBlock);\r\nexport default CommentsBlockConnected;","import classes from \"./Post.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport { useState, useMemo, useEffect } from \"react\";\r\nimport { postsApi, imagesApi } from \"@api/api\";\r\nimport PostCreator from \"../PostCreator/PostCreator\";\r\nimport Likes from \"@components/Likes/Likes.jsx\";\r\nimport DateBar from \"@ui-kit/DateBar/DateBar\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Avatar from \"@ui-kit/Avatar/Avatar\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport Menu from \"@ui-kit/Menu/Menu.jsx\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { TextField } from \"@mui/material\";\r\nimport ImageDialog from \"@ui-kit/ImageDialog/ImageDialog\";\r\nimport ConfirmDialog from \"@ui-kit/ConfirmDialog/ConfirmDialog\";\r\nimport ImageUrlPreview from \"@ui-kit/ImageUrlPreview/ImageUrlPreview\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Expander from \"@features/Expander/Expander\";\r\nimport CommentsBlockConnected from \"@components/comments/CommentsBlock/CommentsBlockConnected\";\r\n\r\nconst imageDialogTitles = {\r\n  add: 'Вы хотите добавить изображение?',\r\n  change: 'Вы хотите изменить изображение?'\r\n};\r\n\r\nconst Post = ({\r\n  post,\r\n  deletePost,\r\n  editPost,\r\n  profileUser,\r\n  setLike,\r\n  authedUser\r\n}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const [changeMode, setChangeMode] = useState(false);\r\n  const [wasImageInPost, setWasImageInPost] = useState(false);\r\n  const [isImageInPost, setIsImageInPost] = useState(false);\r\n  const [editingImageUrl, setEditingImageUrl] = useState(null);\r\n  const [editingImageFile, setEditingImageFile] = useState(null); \r\n  const [imageNeedsDeleting, setImageNeedsDeleting] = useState(null);\r\n  const [wasPostImageChanged, setWasPostImageChanged] = useState(false);\r\n\r\n  const [imageDialogTitle, setImageDialogTitle] = useState(null);\r\n  const [isImageDialogOpened, setIsImageDialogOpened] = useState(false);\r\n  const [isMessageDialogOpened, setIsMessageDialogOpened] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(isImageInPost) {\r\n      setImageDialogTitle(imageDialogTitles.change);\r\n    } else {\r\n      setImageDialogTitle(imageDialogTitles.add);\r\n    }\r\n  }, [isImageInPost])\r\n\r\n  const textField = useMemo(() => {\r\n    return <TextField \r\n      fullWidth\r\n      color='success'\r\n      multiline\r\n      rows={4}\r\n    />;\r\n  }, []);\r\n\r\n  if(!post) return null;\r\n  \r\n  const onPostEdit = () => {\r\n    setChangeMode(true);\r\n    if(post.image) {\r\n      setWasImageInPost(true);\r\n      setIsImageInPost(true);\r\n      setEditingImageUrl(post.image);\r\n    }\r\n  };\r\n\r\n  const onConfirmEdit = (postData) => {\r\n    let editedPost = {\r\n      ...postData,\r\n      _id: post._id,\r\n    };\r\n\r\n    return Promise.resolve((post.image !== editingImageUrl) && !imageNeedsDeleting && editingImageUrl\r\n            ? uploadImageRequest()\r\n            : (post.image !== editingImageUrl) && imageNeedsDeleting && post.image && !editingImageUrl\r\n            ? deletePostImageRequest()\r\n            : (post.image !== editingImageUrl) && imageNeedsDeleting && post.image && editingImageUrl\r\n            ? deletePostImageRequest()\r\n                .then(() => {\r\n                  return uploadImageRequest();\r\n                })\r\n            : getImageRequest()\r\n            ).then(imageUrl => {\r\n              editedPost.image = imageUrl\r\n              return editPost(editedPost)\r\n                .then(() => {\r\n                  setEditingImageUrl(null);\r\n                  setEditingImageFile(null);\r\n                  setImageNeedsDeleting(null);\r\n                  setWasPostImageChanged(false);\r\n                  setWasImageInPost(false);\r\n                  setIsImageInPost(false);\r\n                  setChangeMode(false);\r\n                })\r\n            })\r\n  };\r\n\r\n  const onPostDeleteConfirm = () => {\r\n    deletePost(post._id).\r\n      then(() => {\r\n        setIsMessageDialogOpened(false);\r\n      })\r\n  };\r\n\r\n  const onAddLike = () => {\r\n    return postsApi.addLike(post._id)\r\n      .then(payload => {\r\n        setLike(payload);\r\n      })\r\n  };\r\n\r\n  const onRemoveLike = () => {\r\n    return postsApi.removeLike(post._id)\r\n    .then(payload => {\r\n      setLike(payload);\r\n    })\r\n  };\r\n  \r\n  const onPostImageChange = (image) => {\r\n    const imageUrl = window.URL.createObjectURL(image);\r\n    setEditingImageFile(image);\r\n    setEditingImageUrl(imageUrl);\r\n    setIsImageInPost(true); \r\n    setWasPostImageChanged(true);\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const onDeleteImage = () => {\r\n    if(editingImageUrl === post.image) {\r\n      setImageNeedsDeleting(editingImageUrl);\r\n    }\r\n    setWasPostImageChanged(true);\r\n    setIsImageInPost(false);\r\n    setEditingImageFile(null);\r\n    setEditingImageUrl(null);\r\n  };\r\n\r\n  const onImageDialogOpen = () => {\r\n    setIsImageDialogOpened(true);\r\n  };\r\n\r\n  const onCloseImageDialog = () => {\r\n    setIsImageDialogOpened(false);\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const uploadImageRequest = () => {\r\n    const formData = new FormData();\r\n    formData.append('img', editingImageFile);\r\n    return imagesApi.addImage(formData)\r\n      .then(response => {\r\n        return response.imageUrl\r\n      })\r\n  };\r\n\r\n  const getImageRequest = () => {\r\n    return postsApi.getImage(post._id)\r\n    .then(response => {\r\n      return response.imageUrl\r\n    })\r\n  };\r\n\r\n  const deletePostImageRequest = () => {\r\n    return postsApi.deleteImage(post._id)\r\n      .then(() => {\r\n        return '';\r\n      })\r\n  };\r\n\r\n\r\n  const onCancelEdit = () => {\r\n    setEditingImageUrl(null);\r\n    setEditingImageFile(null);\r\n    setImageNeedsDeleting(null);\r\n    setWasPostImageChanged(false);\r\n    setWasImageInPost(false);\r\n    setIsImageInPost(false);\r\n    setChangeMode(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card \r\n        className = {classes.Post__Card}\r\n        sx={{}}\r\n      >\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar \r\n              userAvatar={profileUser.avatar}\r\n            />\r\n          }\r\n          action={\r\n            post.user === authedUser._id ? \r\n              <Menu changeMode={changeMode}> \r\n                <MenuItem onClick={onPostEdit}>Редактировать</MenuItem>\r\n                <MenuItem onClick={() => (setIsMessageDialogOpened(true))}>Удалить</MenuItem>\r\n              </Menu>\r\n            : null\r\n          }\r\n          title={profileUser.nickname}\r\n          subheader={<DateBar creationDate={post.createdAt} updateDate={post.updatedAt}/>}\r\n        />\r\n          \r\n          {changeMode && isImageInPost ? \r\n              <ImageUrlPreview\r\n                imageUrl={editingImageUrl}\r\n                onDeleteImage={onDeleteImage}\r\n                className={classes.Card__CardMediaBox}\r\n                isDeleteShown={true}\r\n                imageClassName={classes.Card__PostImage}\r\n              />: null\r\n          }\r\n          \r\n          {!changeMode && post.image ?\r\n            <div className={classes.Card__CardMediaBox}>\r\n              <CardMedia\r\n                component='img'\r\n                image={post.image}\r\n                className={classes.Card__CardMedia}\r\n              />\r\n            </div> : null\r\n          }\r\n         \r\n        <CardContent className={classes.Post__CardContent}>\r\n          {!changeMode &&\r\n            <Typography variant='body1' className={classes.Post__PostText}>\r\n              {post.text}\r\n            </Typography> \r\n          }\r\n          {changeMode &&\r\n            <PostCreator\r\n              onPostConfirm={onConfirmEdit}\r\n              postText={post.text}\r\n              cancelChange={onCancelEdit}\r\n              isShowCancelButton={true}\r\n              buttonContent={'Изменить'}\r\n              textField={textField}\r\n              openImageDialog={onImageDialogOpen}\r\n              isImageInPost={isImageInPost}\r\n              wasPostImageChanged={wasPostImageChanged}\r\n              wasImageInPost={wasImageInPost}\r\n              post={post}\r\n            />\r\n          }\r\n        </CardContent>\r\n        <div className={classes.Card__CardActionsBox}>    \r\n          <CardActions disableSpacing>\r\n            <Likes\r\n              addLike={onAddLike}\r\n              likes={post.nLikes}\r\n              isLiked={post.isLiked}\r\n              authedUserId={authedUser._id}\r\n              removeLike={onRemoveLike}\r\n            />\r\n          </CardActions>\r\n          <CardActions disableSpacing>\r\n            <div>\r\n              {post.nComments || ''} \r\n            </div> \r\n            <Expander\r\n              expand={expanded}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n            >\r\n              <CommentIcon className={classNames(classes.Post__CommentIcon, {\r\n                [classes['Post__CommentIcon--expanded']]: expanded\r\n              })}/> \r\n            </Expander>\r\n          </CardActions>\r\n        </div>\r\n        <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n          <CommentsBlockConnected \r\n            postId={post._id}\r\n            post={post}\r\n            expanded={expanded}\r\n          />\r\n        </Collapse>\r\n      </Card>\r\n      <ImageDialog \r\n        isShown={isImageDialogOpened}\r\n        title={imageDialogTitle}\r\n        closeDialog={onCloseImageDialog}\r\n        onImageConfirm={onPostImageChange}\r\n      />\r\n      <ConfirmDialog\r\n        isShown={isMessageDialogOpened}\r\n        title={'Удаление поста'}\r\n        message={'Вы действительно хотите удалить этот пост?'}\r\n        onCancel={() => {setIsMessageDialogOpened(false)}}\r\n        onConfirm={onPostDeleteConfirm}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post;","import { connect } from \"react-redux\";\r\nimport {\r\n  setLikeActionCreator,\r\n  putCommentsActionCreator,\r\n  deleteCommentActionCreator,\r\n} from \"@redux/actions/post.actions\";\r\nimport Post from \"./Post\";\r\n\r\nlet mapStateToProps = (state, ownProps) => {\r\n  const {post: {_id: postId}} = ownProps;\r\n  return {\r\n    comments: state.entities.posts[postId].comments?.map(commentId => {\r\n      return state.entities.comments[commentId];\r\n    })\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLike: (data) => {\r\n      dispatch(setLikeActionCreator(data));\r\n    },\r\n    putComments: (data) => {\r\n      dispatch(putCommentsActionCreator(data));\r\n    },\r\n    deleteComment: (comment) => {\r\n      dispatch(deleteCommentActionCreator(comment));\r\n    }\r\n  }\r\n};\r\n\r\nconst PostConnected = connect(mapStateToProps, mapDispatchToProps)(Post);\r\nexport default PostConnected;","import { createContext, useContext } from \"react\";\r\n\r\nexport const ScrollContext = createContext(null);\r\n\r\nexport function useScrollContext() {\r\n  return useContext(ScrollContext);\r\n}","import classes from \"./PostsBlock.module.css\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { useAuthContext } from \"@features/auth/auth.context\";\r\nimport { useProgressContext } from \"@features/progress/progress.context\";\r\nimport { postsApi } from \"@api/api\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { CardContent, TextField } from \"@mui/material\";\r\nimport PostConnected from \"../Post/PostConnected\";\r\nimport PostCreator from \"../PostCreator/PostCreator\";\r\nimport List from \"@ui-kit/List/List\";\r\nimport {useScrollContext} from \"@features/scroll/scroll.context\";\r\n\r\nconst pageSize = 5;\r\n\r\nconst PostsBlock = ({\r\n  profileUser,\r\n  isForCurrentUser,\r\n  posts,\r\n  deletePost,\r\n  editPost,\r\n  addPosts,\r\n  setPosts,\r\n  newPost\r\n}) => {\r\n  const {state: {user: authedUser}} = useAuthContext();\r\n  const {isProgress} = useProgressContext();\r\n  const [isHasMore, setIsHasMore] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const scrollableTargetId = useScrollContext();\r\n\r\n  const loadNextPage = useCallback(() => {\r\n    if (!profileUser) return;\r\n\r\n    return postsApi.getPosts(profileUser._id, {page, limit: pageSize, sort: {createdAt: -1}})\r\n      .then(response => {\r\n        addPosts(response.items);\r\n        setIsHasMore(response.hasNextPage);\r\n        setPage(page + 1);\r\n      });\r\n  }, [profileUser?._id, page]);\r\n\r\n  useEffect(() => {\r\n    setPosts([]);\r\n    setPage(1);\r\n    loadNextPage();\r\n  }, [profileUser?._id]);\r\n\r\n  const onAddPost = (post) => {\r\n    const newPostData = {\r\n      ...post\r\n    }\r\n    return postsApi.createPost(newPostData)\r\n      .then(post => {\r\n        newPost(post);\r\n      });\r\n  };\r\n\r\n  const onEditPost = (post) => {\r\n    return postsApi.editPost(post)\r\n      .then(post => {\r\n        editPost(post);\r\n      })\r\n  };\r\n\r\n  const onDeletePost = (postId) => {\r\n    return postsApi.deletePost(postId)\r\n      .then(postId => {\r\n        deletePost(postId);\r\n      })\r\n  };\r\n\r\n  const isPostsShown = isHasMore && posts.length !== 0;\r\n\r\n  return (\r\n    <div className={classes.PostsBlock}>\r\n      <div className={classes.PostsBlock__Posts}>\r\n        {\r\n          isForCurrentUser &&\r\n          <Card className={classes.PostsBlock__PostsCreatorCard}>\r\n            <PostCreator\r\n              onPostConfirm={onAddPost}\r\n              buttonContent={'Поделиться'}\r\n              textField={\r\n                <TextField\r\n                  className={classes.PostsBlock__TextField}\r\n                  label='Добавить запись'\r\n                  placeholder='Что у Вас нового?'\r\n                  color='success'\r\n                  fullWidth\r\n                  multiline\r\n                  maxRows={4}\r\n                  minRows={2}\r\n                />\r\n              }\r\n            />\r\n          </Card>\r\n        }\r\n          <List\r\n            items={posts}\r\n            nextMethod={loadNextPage}\r\n            isHasMore={isHasMore}\r\n            scrollableTargetId={scrollableTargetId}\r\n            itemBuilder={post => (\r\n              <PostConnected \r\n                post={post}\r\n                key={post._id}\r\n                deletePost={onDeletePost}\r\n                editPost={onEditPost}\r\n                editPostImage={editPost}\r\n                profileUser={profileUser}\r\n                isForCurrentUser={isForCurrentUser}\r\n                authedUser={authedUser}\r\n                isProgress={isProgress}\r\n              />\r\n            )}\r\n            noData={\r\n            <Card className={classes.PostsBlock__NoDataCard}>\r\n                <CardContent className={classes.PostsBlock__NoDataText}>\r\n                  Нет записей\r\n                </CardContent>\r\n             </Card>\r\n            }\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostsBlock;","import {\r\n  newPostActionCreator, \r\n  deletePostActionCreator, \r\n  editPostActionCreator,\r\n  setPostsActionCreator,\r\n  addPostsActionCreator\r\n} from \"@redux/actions/post.actions\";\r\nimport PostsBlock from './PostsBlock';\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.pages.userPage.posts.map(postId => state.entities.posts[postId]),\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    newPost: (post) => {\r\n      dispatch(newPostActionCreator(post));\r\n    },\r\n    addPosts: (posts) => {\r\n      dispatch(addPostsActionCreator(posts));\r\n    },\r\n    setPosts: (posts) => {\r\n      dispatch(setPostsActionCreator(posts));\r\n    },\r\n    deletePost: (postId) => {\r\n      dispatch(deletePostActionCreator(postId));\r\n    },\r\n    editPost: (post) => {\r\n      dispatch(editPostActionCreator(post));\r\n    }\r\n  }\r\n};\r\n\r\nconst PostsBlockConnected = connect(mapStateToProps, mapDispatchToProps)(PostsBlock);\r\nexport default PostsBlockConnected;","import classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"../ProfileInfo/ProfileInfo\";\r\nimport PostsBlockConnected from \"../../posts/PostsBlock/PostsBlockConnected\";\r\n\r\nconst Profile = ({\r\n  isForCurrentUser,\r\n  profileUser\r\n}) => {\r\n  return (\r\n    <div className={classes.Profile__Container}>\r\n      <ProfileInfo \r\n        profileUser={profileUser} \r\n        // status={props.status}\r\n        // updateStatus={props.updateStatus}\r\n      />\r\n      <PostsBlockConnected\r\n        profileUser={profileUser}\r\n        isForCurrentUser={isForCurrentUser}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","export const getUserPageUser = (state) => {\r\n  return state.pages.userPage.user;\r\n};","// @ts-nocheck\r\nimport {useEffect} from \"react\";\r\nimport {useAuthContext} from \"@features/auth/auth.context\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Profile from \"@components/Profile/ProfilePage/Profile\";\r\nimport ProfileRouteConnect from \"./ProfileRoute.connect\";\r\n\r\nfunction ProfileRoute({\r\n  profileUser,\r\n  getUser,\r\n  clearUser\r\n}) {\r\n  const params = useParams();\r\n  const paramsUserId = params.userId;\r\n  const {state: {user: {_id: authedUserId}}} = useAuthContext();\r\n\r\n  useEffect(() => {\r\n    getUser(paramsUserId);\r\n    console.log(params);\r\n  }, [paramsUserId])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearUser();\r\n    };\r\n  }, []);\r\n\r\n  if (!profileUser) return null;\r\n\r\n  return (\r\n    <>\r\n      <Profile\r\n        profileUser={profileUser}\r\n        isForCurrentUser={authedUserId === profileUser._id}\r\n        // status={this.props.status}\r\n        status=''\r\n        // updateStatus={this.props.updateUserStatus}\r\n        updateStatus={() => {}}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileRouteConnect(ProfileRoute);","import { connect } from \"react-redux\";\r\nimport {getUserActionCreator} from \"@redux/thunks/users.thunks\";\r\nimport {getUserPageUser} from \"@redux/selectors/user.selectors\";\r\nimport {setUserActionCreator} from '@redux/actions/users.actions';\r\n\r\nlet mapStateToProps = (state) => ({ \r\n  profileUser: getUserPageUser(state)\r\n  // status: state.userData.status\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    clearUser: () => dispatch(setUserActionCreator(null)),\r\n    getUser: (userId) => dispatch(getUserActionCreator(userId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps);","import { usersApi } from \"@api/api\";\r\nimport { setUserActionCreator } from \"@redux/actions/users.actions\";\r\n\r\nexport const getUserActionCreator = (userId) => (dispatch) => {\r\n  dispatch(setUserActionCreator(null));\r\n  usersApi.getUser(userId)\r\n    .then(response => {\r\n      dispatch(setUserActionCreator(response));\r\n    });\r\n};\r\n","// import classes from \"@components/common/FormsControls/FormsControls.module.css\";\r\nimport classes from \"./Login.route.module.scss\";\r\nimport { useState } from \"react\";\r\nimport { useAuthContext } from \"@features/auth/auth.context\";\r\nimport { useProgressContext } from \"@features/progress/progress.context\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validate } from \"@utils/validators/validators\";\r\nimport { Input } from \"@features/FormsControls/FormsControls\";\r\nimport { Card, CardContent, CardHeader } from \"@mui/material\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\nimport InfoDialog from \"@ui-kit/InfoDialog/InfoDialog\";\r\n\r\nconst LoginForm = (props) => {\r\n  const {isProgress} = useProgressContext();\r\n  return (\r\n        <>\r\n          <form>\r\n            <div>\r\n              <Field \r\n                classname={classes.Login__Field}\r\n                name={'login'} \r\n                placeholder={'Логин'} \r\n                component={Input}\r\n                style={{width: 200, height: 25}}\r\n              />\r\n            </div>\r\n            <div>\r\n            <Field \r\n                classname={classes.Login__Field}\r\n                name={'password'} \r\n                placeholder={'Пароль'} \r\n                component={Input}\r\n                type={'password'}  \r\n                style={{width: 200, height: 25, marginTop: 25}}\r\n              />\r\n            </div>\r\n            {/* <div>\r\n              <Field name={\"rememberMe\"} type={\"checkbox\"} component={Input}/>\r\n                Запомнить меня\r\n            </div> */}\r\n            { props.error &&\r\n              <div className={classes.formSummaryError}>\r\n                {props.error}\r\n              </div>\r\n            }\r\n          </form>\r\n          <div className={classes.Login__ButtonContainer}>\r\n            <Button\r\n              className={classes.Login__Button}\r\n              color='success'\r\n              variant='outlined'\r\n              onClick={props.handleSubmit}\r\n              disabled={isProgress}\r\n            >\r\n              Войти\r\n            </Button>\r\n          </div>\r\n        </>\r\n  )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"LoginForm\",\r\n  validate: validate\r\n})(LoginForm);\r\n\r\nconst Login = () => {\r\n  const {login} = useAuthContext();\r\n  const {isProgress} = useProgressContext();\r\n  const [isShown, setIsShown] = useState(false);\r\n\r\n  const onSubmit = (formData) => {\r\n    login(formData.login, formData.password)\r\n    .catch((error) => {\r\n      setIsShown(true);\r\n    });\r\n  }\r\n\r\n  const onClose = () => {\r\n    setIsShown(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.Login__Container}>\r\n        <CardHeader title={'Войти'} className={classes.Login__CardHeader}>\r\n        </CardHeader>\r\n        <CardContent className={classes.Login__FormBox}>\r\n          <LoginReduxForm onSubmit={onSubmit} />\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <InfoDialog \r\n        isShown={isShown}\r\n        title={'Ошибка ввода'}\r\n        isProgress={isProgress}\r\n        onClose={onClose}\r\n        message={'Неправильно введен логин или пароль'}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import { useState, Children, cloneElement, useCallback } from \"react\";\r\nimport ImageDialog from \"@ui-kit/ImageDialog/ImageDialog\";\r\n\r\nfunction ImageChanger ({\r\n  children,\r\n  onImageChange,\r\n  title,\r\n  isProgress\r\n}) {\r\n  const [isDialogOpened, setIsDialogOpened] = useState(false);\r\n\r\n  const onImageDataFormed = (image) => {\r\n    const formData = new FormData();\r\n    formData.append('img', image);\r\n    return onImageChange(formData)\r\n      .then(() => {\r\n        onCloseDialog();\r\n      })\r\n  };\r\n\r\n  const onCloseDialog = () => {\r\n    setIsDialogOpened(false);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      {Children.map(children, (child) => {\r\n            return cloneElement(child, {\r\n              onClick: () => {\r\n                setIsDialogOpened(true);\r\n              }\r\n            });\r\n          })}\r\n      <ImageDialog \r\n        isShown={isDialogOpened}\r\n        title={title}\r\n        closeDialog={onCloseDialog}\r\n        onImageConfirm={onImageDataFormed}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageChanger;","import classes from \"./Settings.module.scss\";\r\nimport { useState } from \"react\";\r\nimport { usersApi } from '@api/api';\r\nimport { useAuthContext } from \"@features/auth/auth.context\";\r\nimport { useProgress } from \"@features/progress/useProgress.js\";\r\nimport Avatar from \"@ui-kit/Avatar/Avatar\";\r\nimport Button from \"@ui-kit/Button/Button\";\r\nimport AddPhotoAlternateIcon from \"@mui/icons-material/AddPhotoAlternate\";\r\nimport ImageChanger from \"@ui-kit/ImageChanger/ImageChanger\";\r\nimport ConfirmDialog from \"@ui-kit/ConfirmDialog/ConfirmDialog.jsx\";\r\nimport DefaultBanner from \"@assets/images/defaultBanner.jpg\";\r\n\r\nconst TITLES = {\r\n  AVATAR: ['Изменить аватар'],\r\n  BANNER: ['Изменить баннер']\r\n};\r\n\r\nconst Settings = ({\r\n  authedUser,\r\n  userProfileId,\r\n  changeProfileImage\r\n}) => {\r\n  const {changeUserData} = useAuthContext();\r\n  const {increment: incrementAvatarProgress, decrement: decrementAvatarProgress, isProgress: isAvatarProgress} = useProgress();\r\n  const {increment: incrementBannerProgress, decrement: decrementBannerProgress, isProgress: isBannerProgress} = useProgress();\r\n  const [isAvatarDialogOpened, setIsAvatarDialogOpened] = useState(false);\r\n  const [isBannerDialogOpened, setIsBannerDialogOpened] = useState(false);\r\n\r\n  const isTheSameUser = authedUser._id === userProfileId;\r\n\r\n  const onBannerChange = (formData) => {\r\n    incrementBannerProgress();\r\n    return usersApi.changeUserBanner(formData)\r\n      .then(user => {\r\n        onChangeUserImages(user);\r\n      })\r\n      .finally(() => {\r\n        decrementBannerProgress();\r\n      })\r\n  };\r\n\r\n  const onAvatarChange = (formData) => {\r\n    incrementAvatarProgress();\r\n    return usersApi.changeUserAvatar(formData)\r\n      .then(user => {\r\n        onChangeUserImages(user);\r\n      })\r\n      .finally(() => {\r\n        decrementAvatarProgress();\r\n      })\r\n  };\r\n\r\n  const onChangeUserImages = (data) => {\r\n    changeUserData(data);\r\n    if(isTheSameUser) {\r\n      changeProfileImage(data);\r\n    }\r\n  };\r\n\r\n  const onBannerDeleteConfirm = () => {\r\n    incrementBannerProgress();\r\n    return usersApi.deleteUserBanner(authedUser.banner)\r\n      .then(user => {\r\n        onChangeUserImages(user);\r\n        setIsBannerDialogOpened(false);\r\n      })\r\n      .finally(() => {\r\n        decrementBannerProgress();\r\n      })\r\n  };\r\n\r\n  const onAvatarDeleteConfirm = () => {\r\n    incrementAvatarProgress();\r\n    return usersApi.deleteUserAvatar(authedUser.avatar)\r\n      .then(user => {\r\n        onChangeUserImages(user);\r\n        setIsAvatarDialogOpened(false);\r\n      })\r\n      .finally(() => {\r\n        decrementAvatarProgress();\r\n      })\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Settings__Container}>\r\n      <div className={classes.Settings__Header}>\r\n        Изменить аватар \r\n      </div>\r\n      <div className={classes.Settings__Avatar}>\r\n        <Avatar\r\n          userAvatar={authedUser.avatar}\r\n          avatarHeight={150}\r\n          avatarWidth={150}\r\n        />\r\n      </div>\r\n      <div className={classes.Settings__ButtonBox}>\r\n        <ImageChanger\r\n          title={TITLES.AVATAR}\r\n          onImageChange={onAvatarChange}\r\n          isProgress={isAvatarProgress}\r\n        >\r\n          <Button \r\n            startIcon={<AddPhotoAlternateIcon />}\r\n            disabled={isAvatarProgress}\r\n            color='success'\r\n            variant='outlined'\r\n            className={classes.Settings__Button}\r\n          >\r\n            Изменить\r\n          </Button>\r\n        </ImageChanger>\r\n        {authedUser.avatar && \r\n          <Button \r\n            disabled={isAvatarProgress}\r\n            onClick={() => setIsAvatarDialogOpened(true)}\r\n            color='success'\r\n            variant='outlined'\r\n            className={classes.Settings__DeleteButton}\r\n          >\r\n            Удалить\r\n          </Button>\r\n        }\r\n      </div>\r\n      <div className={classes.Settings__Header}>\r\n        Изменить баннер\r\n      </div>\r\n      <div className={classes.Settings__BannerBox}>\r\n        <img \r\n          className={classes.Settings__Banner}\r\n          src={authedUser.banner || DefaultBanner} \r\n        />\r\n      </div>\r\n      <div className={classes.Settings__ButtonBox}>\r\n        <ImageChanger\r\n          title={TITLES.BANNER}\r\n          onImageChange={onBannerChange}\r\n          isProgress={isBannerProgress}\r\n        >\r\n          <Button \r\n            startIcon={<AddPhotoAlternateIcon />}\r\n            disabled={isBannerProgress}\r\n            color='success'\r\n            variant='outlined'\r\n            className={classes.Settings__Button}\r\n          >\r\n            Изменить\r\n          </Button>\r\n        </ImageChanger>\r\n        {authedUser.banner && \r\n          <Button \r\n            disabled={isBannerProgress}\r\n            onClick={() => setIsBannerDialogOpened(true)}\r\n            color='success'\r\n            variant='outlined'\r\n            className={classes.Settings__DeleteButton}\r\n          >\r\n            Удалить\r\n          </Button>\r\n        }\r\n      </div>\r\n      <ConfirmDialog\r\n        isShown={isAvatarDialogOpened}\r\n        title={\"Удаление аватара\"}\r\n        message={\"Вы действительно хотите удалить аватар?\"}\r\n        onCancel={() => {setIsAvatarDialogOpened(false)}}\r\n        onConfirm={onAvatarDeleteConfirm}\r\n      />\r\n      <ConfirmDialog\r\n        isShown={isBannerDialogOpened}\r\n        title={\"Удаление баннера\"}\r\n        message={\"Вы действительно хотите удалить баннер?\"}\r\n        onCancel={() => {setIsBannerDialogOpened(false)}}\r\n        onConfirm={onBannerDeleteConfirm}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import { connect } from \"react-redux\";\r\nimport { setUserActionCreator } from \"@redux/actions/users.actions\";\r\nimport Settings from \"./Settings.jsx\";\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeProfileImage: (user) => {\r\n      dispatch(setUserActionCreator(user));\r\n    } \r\n  }\r\n};\r\n\r\nconst SettingsConnected = connect(null, mapDispatchToProps)(Settings);\r\nexport default SettingsConnected;","import classes from \"./UserInfo.module.scss\";\r\nimport Avatar from \"@ui-kit/Avatar/Avatar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Card } from \"@mui/material\";\r\n\r\nfunction UserInfo ({\r\n  nickname,\r\n  avatar,\r\n  userId\r\n  // status,\r\n}) {\r\n  return (\r\n    <NavLink to={`/profile/${userId}`} className={classes.UserInfo__NavLink} >\r\n      <Card className={classes.UserInfo__Container}>\r\n        <div className={classes.UserInfo__Avatar}>\r\n          <Avatar \r\n            userAvatar={avatar}\r\n            avatarHeight={150}\r\n            avatarWidth={150} \r\n          />\r\n        </div>\r\n        <div className={classes.UserInfo__Nickname}>\r\n          {nickname}\r\n        </div>\r\n      </Card>\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nexport default UserInfo;","import classes from \"./Users.module.css\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { usersApi } from \"@api/api\";\r\nimport UserInfo from \"../UserInfo/UserInfo\";\r\nimport {useScrollContext} from \"@features/scroll/scroll.context\";\r\nimport List from \"@ui-kit/List/List\";\r\nimport { Card, CardContent } from \"@mui/material\";\r\n\r\nconst pageSize = 10;\r\n\r\nfunction Users ({\r\n  addUsers,\r\n  users\r\n}) {\r\n  const [isHasMore, setIsHasMore] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const scrollableTargetId = useScrollContext();\r\n  const [isUsersListReady, setIsUsersListReady] = useState(false);\r\n\r\n  const loadNextPage = useCallback(() => {\r\n\r\n    usersApi.getUsers({page, limit: pageSize})\r\n          .then(response => {\r\n            setIsUsersListReady(true);\r\n            addUsers(response.items)\r\n            setIsHasMore(response.hasNextPage);\r\n            setPage(page + 1);\r\n          })\r\n  }, [addUsers, page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n    loadNextPage();\r\n  }, []);\r\n\r\n  const isShowNoData = users?.length === 0 && isUsersListReady;\r\n  \r\n  return (\r\n    <div className={classes.Users__Container}>\r\n      <List\r\n        items={users}\r\n        nextMethod={loadNextPage}\r\n        isHasMore={isHasMore}\r\n        scrollableTargetId={scrollableTargetId}\r\n        itemBuilder={user => (\r\n          <UserInfo \r\n            key={user._id} \r\n            userId={user._id}\r\n            nickname={user.nickname} \r\n            avatar={user.avatar} \r\n          />\r\n        )}\r\n        noData={\r\n          <Card className={classes.Users__NoDataCard}>\r\n            <CardContent className={classes.Users__NoDataText}>\r\n              Нет пользователей\r\n            </CardContent>\r\n          </Card>\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users;","import {\r\n  addUsersActionCreator\r\n} from \"@redux/actions/users.actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Users from \"./Users.jsx\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.pages.usersPage.users.map(userId => state.entities.users[userId])\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n   addUsers: (users) => {\r\n      dispatch(addUsersActionCreator(users));\r\n    }\r\n  }\r\n};\r\n\r\nconst UsersConnected = connect(mapStateToProps, mapDispatchToProps)(Users);\r\nexport default UsersConnected;","import { useAuthContext } from \"@features/auth/auth.context\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport RegisterRoute from \"@routes/RegisterRoute/Register.route\";\r\nimport ProfileRoute from \"@routes/ProfileRoute/ProfileRoute\";\r\nimport Login from \"../../routes/LoginRoute/Login.route\";\r\nimport SettingsConnected from \"@components/Settings/SettingsConnected.js\";\r\nimport UsersConnected from \"@components/Users/UsersPage/UsersConnected.js\";\r\n\r\n\r\nfunction AppRouting() {\r\n  const {state: {user: authedUser, isAuthed, isInitialized}} = useAuthContext();\r\n\r\n  if (!isInitialized) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      {isAuthed && <Route path='/settings' render={() => <SettingsConnected authedUser={authedUser}/>} />}\r\n      {isAuthed && <Route path='/profile/:userId' render={() => <ProfileRoute />}/>}\r\n      {isAuthed && <Route path='/users' render={() => <UsersConnected />}/>}\r\n      {isAuthed && <Route path='*' render={() => <Redirect to={`/profile/${authedUser._id}`} />} />}\r\n\r\n      {!isAuthed && <Route path='/login' render={() => <Login />} />}\r\n      {!isAuthed && <Route path='/register' render={() => <RegisterRoute />} />}\r\n      {!isAuthed && <Route path='*' render={() => <Redirect to='/login' />} />}\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default AppRouting;","import classes from \"./Navbar.module.css\";\r\nimport { useAuthContext } from \"@features/auth/auth.context\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const {state: {user}} = useAuthContext();\r\n\r\n  return (\r\n    <nav className={classes.Navbar__Box}>\r\n      {!user\r\n        ? null \r\n        : <>\r\n          <div className={classes.Navbar__Link}>\r\n            <NavLink to={`/profile/${user?._id}`} activeClassName={classes.active}>Профиль</NavLink>\r\n          </div>\r\n          <div className={classes.Navbar__Link}>\r\n            <NavLink to='/users' activeClassName={classes.active}>Пользователи</NavLink>\r\n          </div>\r\n           <div className={classes.Navbar__Link}>\r\n            <NavLink to='/settings' activeClassName={classes.active}>Настройки профиля</NavLink>\r\n          </div>\r\n        </>\r\n      }\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/postikLabel.42d77a24.png\";","import classes from \"./Header.module.css\";\r\nimport classNames from \"classnames\";\r\nimport { useAuthContext } from \"@features/auth/auth.context\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Avatar from \"@ui-kit/Avatar/Avatar\";\r\nimport IconButton from \"ui-kit/IconButton/IconButton.jsx\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport Label from \"@assets/images/postikLabel.png\";\r\n\r\nconst Header = () => {\r\n  const {state: {isAuthed, user}, logout} = useAuthContext();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.Header__Label}>\r\n        <img src={Label} />\r\n      </div>\r\n      <div className={classes.Header__LoginBlock}>\r\n        {isAuthed\r\n          ? <>\r\n              <div className={classes.Header__UserInfo}>\r\n                <NavLink to={`/profile/${user._id}`}>\r\n                  <Avatar \r\n                    userAvatar = {user.avatar}\r\n                    avatarHeight = {40}\r\n                    avatarWidth = {40}\r\n                    className={''}\r\n                  />\r\n                </NavLink> \r\n                <NavLink \r\n                  className={classes.Header__NavLink} \r\n                  to={`/profile/${user._id}`}\r\n                >\r\n                  <div className={classes.Header__Nickname}>\r\n                    {user.nickname}\r\n                  </div>\r\n                </NavLink>\r\n              </div>\r\n              <div className={classes.Header__Options}>\r\n                <IconButton onClick={logout}>\r\n                  <LogoutIcon className={classes.Header__LogoutIcon}/>\r\n                </IconButton>\r\n              </div>\r\n            </>\r\n          : <>\r\n              <div className={classes.Header__UserInfo}>\r\n                <Avatar \r\n                  userAvatar = {''}\r\n                  avatarHeight = {40}\r\n                  avatarWidth = {40}\r\n                  className={''}\r\n                />\r\n              </div>\r\n              <div className={classes.Header__Options}>\r\n                <NavLink className={classNames(classes.Header__NavLink, classes.Header__LoginLink)} to={'/login'}>Войти</NavLink>\r\n                <NavLink className={classes.Header__NavLink} to={'/register'}>Регистрация</NavLink>\r\n              </div>\r\n            </> \r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import { ScrollContext } from './scroll.context';\r\n\r\nfunction ScrollProvider({children, scrollableTargetId}) {\r\n  return (\r\n    <ScrollContext.Provider value={scrollableTargetId}>\r\n      {children}\r\n    </ScrollContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ScrollProvider;","import \"@assets/styles/preloader.css\";\r\nimport classes from \"./App.module.css\";\r\nimport Auth from \"@features/auth/Auth\";\r\nimport Progress from \"@features/progress/Progress\";\r\nimport AppRouting from \"@features/AppRouting/AppRouting\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Header from \"@components/Header/Header\";\r\nimport ScrollProvider from '@features/scroll/ScrollProvider';\r\n\r\nfunction App () {\r\n  return (\r\n    <Auth>\r\n    <Progress>\r\n      <div className={classes.App__Container}>\r\n        <div className={classes.Header__Container}>\r\n          <Header />\r\n        </div>\r\n        <div className={classes.App__ContentContainer}>\r\n          <Navbar />\r\n          <div className={classes.App__MainInfoContainer} id={classes.App__MainInfoContainer}>\r\n            <ScrollProvider scrollableTargetId={classes.App__MainInfoContainer}>\r\n              <AppRouting />\r\n            </ScrollProvider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Progress>\r\n    </Auth>\r\n  )\r\n}\r\n\r\nexport default App;","import { createHashHistory } from \"history\";\r\n\r\nconst history = createHashHistory();\r\n\r\nexport default history;","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"@redux/store/redux-store.js\";\r\nimport App from \"@components/App/App\";\r\nimport {Router, HashRouter} from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport history from \"./history\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App  />\r\n      </Provider> \r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings__Container\":\"Settings_Settings__Container__3_dph\",\"Settings__BannerBox\":\"Settings_Settings__BannerBox__2qLUW\",\"Settings__Banner\":\"Settings_Settings__Banner__3CE5I\",\"Settings__Header\":\"Settings_Settings__Header__2Y3y0\",\"Settings__Avatar\":\"Settings_Settings__Avatar__3mygX\",\"Settings__ButtonBox\":\"Settings_Settings__ButtonBox__1vBdf\",\"Settings__Button\":\"Settings_Settings__Button__1EGXD\",\"Settings__DeleteButton\":\"Settings_Settings__DeleteButton__5NIPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header__LoginBlock\":\"Header_Header__LoginBlock__YceTM\",\"Header__UserInfo\":\"Header_Header__UserInfo__28lpf\",\"Header__NavLink\":\"Header_Header__NavLink__oqkCk\",\"Header__Navlink\":\"Header_Header__Navlink__2Ty2N\",\"Header__LoginLink\":\"Header_Header__LoginLink__1vfNA\",\"Header__Options\":\"Header_Header__Options__1e4wZ\",\"Header__Nickname\":\"Header_Header__Nickname__2-q5C\",\"Header__Label\":\"Header_Header__Label__4TLh7\",\"Header__LogoutIcon\":\"Header_Header__LogoutIcon__2u8xU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post__Card\":\"Post_Post__Card__1ZJfv\",\"Card__CardMedia\":\"Post_Card__CardMedia__1rv-O\",\"Card__CardMediaBox\":\"Post_Card__CardMediaBox__23chu\",\"Card__CardActionsBox\":\"Post_Card__CardActionsBox__2x2cQ\",\"Post__CardContent\":\"Post_Post__CardContent__1i-Ac\",\"Post__PostText\":\"Post_Post__PostText__2Wq6O\",\"Post__CommentIcon--expanded\":\"Post_Post__CommentIcon--expanded__3F7Qu\",\"Card__PostImage\":\"Post_Card__PostImage__2hZdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register__Container\":\"Register_route_Register__Container__1J-0J\",\"Register__FormBox\":\"Register_route_Register__FormBox__1QiiO\",\"Register__Field\":\"Register_route_Register__Field__2yl6B\",\"Register__ButtonContainer\":\"Register_route_Register__ButtonContainer__3nxXt\",\"Register__Button\":\"Register_route_Register__Button__2j9Nt\",\"Login__CardHeader\":\"Register_route_Login__CardHeader__VwBjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostCreator__Card\":\"PostCreator_PostCreator__Card__1YsE9\",\"PostCreator__CardActions\":\"PostCreator_PostCreator__CardActions__3Ohz1\",\"PostCreator__CardContentBox\":\"PostCreator_PostCreator__CardContentBox__1tllH\",\"PostCreator__Button\":\"PostCreator_PostCreator__Button__uBkh7\",\"PostCreator__IconButton\":\"PostCreator_PostCreator__IconButton__1hn6v\",\"PostCreator__ImagePreview\":\"PostCreator_PostCreator__ImagePreview__3c_hq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment__Box\":\"Comment_Comment__Box__28y9O\",\"Comment__UserCommentBox\":\"Comment_Comment__UserCommentBox__KsKHU\",\"Comment__Header\":\"Comment_Comment__Header__AGQLP\",\"Comment__Typography\":\"Comment_Comment__Typography__3DJLU\",\"Comment__Text\":\"Comment_Comment__Text__1ISMS\",\"Comment__DateBar\":\"Comment_Comment__DateBar__415Sp\",\"Comment__Icon\":\"Comment_Comment__Icon__2Zfqt\",\"Comment__CloseIcon\":\"Comment_Comment__CloseIcon__1Wxiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login__Container\":\"Login_route_Login__Container__19wer\",\"Login__FormBox\":\"Login_route_Login__FormBox__Jr0mI\",\"Login__Field\":\"Login_route_Login__Field__3kQFN\",\"Login__ButtonContainer\":\"Login_route_Login__ButtonContainer__2iGoM\",\"Login__Button\":\"Login_route_Login__Button__2KoJc\",\"Login__CardHeader\":\"Login_route_Login__CardHeader__1_D--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar__Box\":\"Navbar_Navbar__Box__3d03-\",\"Navbar__Link\":\"Navbar_Navbar__Link__1lf3K\",\"active\":\"Navbar_active__IOKcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App__Container\":\"App_App__Container__33Y0S\",\"App__ContentContainer\":\"App_App__ContentContainer__c35eL\",\"App__MainInfoContainer\":\"App_App__MainInfoContainer__2u1qU\",\"Header__Container\":\"App_Header__Container__2VDPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostsBlock\":\"PostsBlock_PostsBlock__2NPxN\",\"PostsBlock__Header\":\"PostsBlock_PostsBlock__Header__2WwXD\",\"PostsBlock__Posts\":\"PostsBlock_PostsBlock__Posts__3AAUW\",\"PostsBlock__PostsCreatorCard\":\"PostsBlock_PostsBlock__PostsCreatorCard__2JHEI\",\"PostsBlock__TextField\":\"PostsBlock_PostsBlock__TextField__VvYfp\",\"PostsBlock__NoDataCard\":\"PostsBlock_PostsBlock__NoDataCard__3W2u9\",\"PostsBlock__NoDataText\":\"PostsBlock_PostsBlock__NoDataText__9_YVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageDialog__Title\":\"ImageDialog_ImageDialog__Title__1qrgf\",\"ImageDialog__Content\":\"ImageDialog_ImageDialog__Content__24gW7\",\"ImageDialog__ButtonContainer\":\"ImageDialog_ImageDialog__ButtonContainer__2gI0d\",\"ImageDialog__Button\":\"ImageDialog_ImageDialog__Button__3BStj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConfirmDialog__Title\":\"ConfirmDialog_ConfirmDialog__Title__pREba\",\"ConfirmDialog__Content\":\"ConfirmDialog_ConfirmDialog__Content__2tuwy\",\"ConfirmDialog__ButtonContainer\":\"ConfirmDialog_ConfirmDialog__ButtonContainer__2hAJg\",\"ConfirmDialog__ButonContainer\":\"ConfirmDialog_ConfirmDialog__ButonContainer__1qTps\",\"ConfirmDialog__Button\":\"ConfirmDialog_ConfirmDialog__Button__2yik1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoDialog__Title\":\"InfoDialog_InfoDialog__Title__1GCmE\",\"InfoDialog__Content\":\"InfoDialog_InfoDialog__Content__pgVM7\",\"InfoDialog__ButtonContainer\":\"InfoDialog_InfoDialog__ButtonContainer__CFZNh\",\"InfoDialog__Button\":\"InfoDialog_InfoDialog__Button__1ldxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo__Banner\":\"ProfileInfo_ProfileInfo__Banner__2DrYp\",\"ProfileInfo__UserInfo\":\"ProfileInfo_ProfileInfo__UserInfo__2nHYV\",\"ProfileInfo__Avatar\":\"ProfileInfo_ProfileInfo__Avatar__2E2PR\",\"ProfileInfo__Nickname\":\"ProfileInfo_ProfileInfo__Nickname__2uSFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentsCreator__Box\":\"CommentsCreator_CommentsCreator__Box__2xofi\",\"CommentsCreator__UserCommentBox\":\"CommentsCreator_CommentsCreator__UserCommentBox__2vd1m\",\"CommentsCreator__Avatar\":\"CommentsCreator_CommentsCreator__Avatar__26RgJ\",\"CommentsCreator__TextField\":\"CommentsCreator_CommentsCreator__TextField__1jjh9\",\"CommentsCreator__Button\":\"CommentsCreator_CommentsCreator__Button__VItgl\"};"],"sourceRoot":""}